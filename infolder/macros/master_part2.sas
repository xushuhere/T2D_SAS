/*****************************************************************************************************/
/**************************** PLEASE DO NOT EDIT CODE BELOW THIS LINE ********************************/
/*****************************************************************************************************/
%let PACKAGENAME = RCR_T2D_PART_2;
%let ver         = v13_0;

proc printto log="&qpath.dmoutput/&DMID._&PACKAGENAME._&VER..log" new;
run;

/*
RCR T2D tab
part 1 demographic part
*/

data dmtable.vital;
set indata.vital;
if vtype(measure_time)='N'
then
do;
char_measure_time = put(measure_time, 5.) ;
drop measure_time ;
rename char_measure_time=measure_time ;
end;
run;

proc sql;
/*DROP TABLE RCR_T2D_DEMO;*/
CREATE TABLE RCR_T2D_DEMO AS
(	
	SELECT DISTINCT DEMO.PATID, DOB AS BIRTH_DATE, DEMO.SEX, HISPANIC, RACE
	, year(T1) AS STUDY_ENTRY_YEAR
	, round(yrdif(dob,T1,'AGE')) as AGE
	, CASE_TYPE
	, INCIDENT_DM_FLAG
	, coalesce(C4.INDEX_DATE, C7.INDEX_DATE, C10.INDEX_DATE) AS INDEX_DATE format=date9.
	,T1 
	FROM dmlocal.T1712_SELECTED_CASES_DEMO DEMO
	LEFT JOIN dmlocal.T1712_RCRT2D_COUNT4 C4 on c4.patid=demo.patid
	LEFT JOIN dmlocal.T1712_RCRT2D_COUNT7 C7 on c7.patid=demo.patid
	LEFT JOIN dmlocal.T1712_RCRT2D_COUNT10 C10 on c10.patid=demo.patid
	LEFT JOIN indata.DEMOGRAPHIC d on d.patid=demo.patid 
	)
;
quit;

proc sql;
CREATE table dmtable.DEMO_NUM_IP AS
(SELECT DEMO.PATID, COUNT(*) AS NUM_INPATIENT_VISITS
FROM RCR_T2D_DEMO DEMO JOIN indata.ENCOUNTER ENC on demo.patid=enc.patid
WHERE ENC.ADMIT_DATE BETWEEN (T1-365) AND (T1-1) AND ENC.ENC_TYPE in ('EI', 'IP')
GROUP BY 1
)
;
quit;

/* 
TABLE FOR NUM_ED_VISITS
*/
proc sql;
CREATE table dmtable.DEMO_NUM_ED AS
(SELECT DEMO.PATID, COUNT(*) AS NUM_ED_VISITS
FROM RCR_T2D_DEMO DEMO JOIN indata.ENCOUNTER ENC on demo.patid=enc.patid
WHERE ENC.ADMIT_DATE BETWEEN (T1-365) AND (T1-1) AND ENC.ENC_TYPE = 'ED'
GROUP BY 1
)
;
quit;

/*
TABLE FOR NUM_OUTPATIENT_VISITS
*/
proc sql;
CREATE table dmtable.DEMO_NUM_OP AS
(SELECT DEMO.PATID, COUNT(*) AS NUM_OUTPATIENT_VISITS
FROM RCR_T2D_DEMO DEMO JOIN indata.ENCOUNTER ENC on demo.patid=enc.patid
WHERE ENC.ADMIT_DATE BETWEEN (T1-365) AND (T1-1) AND ENC.ENC_TYPE ='AV'
GROUP BY 1
)
;
quit;

/*
TABLEs FOR HTN_FLAG
*/

/*
HTN_FLAG 1 (IP patient)
*/
proc sql;
CREATE table dmtable.DEMO_HTN_FLAG_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS HTN_FLAG
FROM RCR_T2D_DEMO DEMO  JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&HTN_09.))
	   OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN(&HTN_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI', 'IP')
	;
quit;

/*
HTN_FLAG OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.DEMO_HTN_FLAG_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS HTN_FLAG
FROM RCR_T2D_DEMO DEMO JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&HTN_09.))
	   OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&HTN_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
	;
quit;

/*
COMBIND TWO TABLES TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_HTN_FLAG AS
SELECT * FROM dmtable.DEMO_HTN_FLAG_1
UNION (SELECT * FROM dmtable.DEMO_HTN_FLAG_2 WHERE HTN_FLAG = 1);
quit;

proc sql;
CREATE table dmtable.DEMO_LIPID_DISORDERS_FLAG_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS LIPID_DISORDERS_FLAG
FROM RCR_T2D_DEMO DEMO  JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&LIPID_DISORDERS_09.))
	   OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN(&LIPID_DISORDERS_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI', 'IP')
	;
quit;

/*
LIPID_DISORDERS_FLAG OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.DEMO_LIPID_DISORDERS_FLAG_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS LIPID_DISORDERS_FLAG
FROM RCR_T2D_DEMO DEMO JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&LIPID_DISORDERS_09.))
	   OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&LIPID_DISORDERS_10.)))
	AND  DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
	;
quit;

/*
COMBIND TWO TABLES TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_LIPID_DISORDERS_FLAG AS
SELECT * FROM dmtable.DEMO_LIPID_DISORDERS_FLAG_1
UNION (SELECT * FROM dmtable.DEMO_LIPID_DISORDERS_FLAG_2 WHERE LIPID_DISORDERS_FLAG= 1);
quit;

/*
TABLEs FOR CANCER_FLAG
*/

/*
CANCER_FLAG 1 (IP patient)
*/
proc sql;
CREATE table dmtable.DEMO_CANCER_FLAG_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS CANCER_FLAG
FROM RCR_T2D_DEMO DEMO  JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&CANCER_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&CANCER_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI', 'IP')
	;
quit;

/*
CANCER_FLAG OTHER PATIENTS
*/
proc sql;
CREATE table  dmtable.DEMO_CANCER_FLAG_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS CANCER_FLAG
FROM RCR_T2D_DEMO DEMO JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&CANCER_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&CANCER_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
	;
quit;

/*
COMBIND TWO TABLES TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_CANCER_FLAG AS
SELECT * FROM dmtable.DEMO_CANCER_FLAG_1
UNION (SELECT * FROM dmtable.DEMO_CANCER_FLAG_2 WHERE CANCER_FLAG = 1);
quit;

/*
TABLEs FOR LIVER_DISEASE_FLAG
*/
/*
LIVER_DISEASE_FLAG 1 (IP patient)
*/
proc sql;
CREATE table dmtable.DEMO_LIVER_DISEASE_FLAG_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS LIVER_DISEASE_FLAG
FROM RCR_T2D_DEMO DEMO  JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&LIVER_DISEASE_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&LIVER_DISEASE_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI', 'IP')
	;
quit;

/*
LIVER_DISEASE_FLAG OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.DEMO_LIVER_DISEASE_FLAG_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS LIVER_DISEASE_FLAG
FROM RCR_T2D_DEMO DEMO JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&LIVER_DISEASE_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&LIVER_DISEASE_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
	;
quit;

/*
COMBIND TWO TABLEs TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_LIVER_DISEASE_FLAG AS
SELECT * FROM dmtable.DEMO_LIVER_DISEASE_FLAG_1
UNION (SELECT * FROM dmtable.DEMO_LIVER_DISEASE_FLAG_2 WHERE LIVER_DISEASE_FLAG = 1);
quit;

/*
TABLEs FOR PULMONARY_FLAG
*/
/*
PULMONARY_FLAG 1 (IP patient)
*/
proc sql;
CREATE table dmtable.DEMO_PULMONARY_FLAG_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS PULMONARY_FLAG
FROM RCR_T2D_DEMO DEMO  JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&PULMONARY_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&PULMONARY_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI', 'IP')
	;
quit;

/*
PULMONARY_FLAG OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.DEMO_PULMONARY_FLAG_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS PULMONARY_FLAG
FROM RCR_T2D_DEMO DEMO JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&PULMONARY_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&PULMONARY_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
	;
quit;

/*
COMBIND TWO TABLES TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_PULMONARY_FLAG AS
SELECT * FROM dmtable.DEMO_PULMONARY_FLAG_1
UNION (SELECT * FROM dmtable.DEMO_PULMONARY_FLAG_2 WHERE PULMONARY_FLAG = 1);
quit;

/*
TABLEs FOR CHF_FLAG
*/
/*
CHF_FLAG 1 (IP patient)
*/
proc sql;
CREATE table dmtable.DEMO_CHF_FLAG_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS CHF_FLAG
FROM RCR_T2D_DEMO DEMO  JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&CHF_FLAG_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&CHF_FLAG_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI', 'IP')
	;
quit;

/*
CHF_FLAG OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.DEMO_CHF_FLAG_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS CHF_FLAG
FROM RCR_T2D_DEMO DEMO JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&CHF_FLAG_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&CHF_FLAG_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
;
quit;

/*
COMBIND TWO TABLES TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_CHF_FLAG AS
SELECT * FROM dmtable.DEMO_CHF_FLAG_1
UNION (SELECT * FROM dmtable.DEMO_CHF_FLAG_2 WHERE CHF_FLAG = 1);
quit;

/*
TABLEs FOR RETINOPATHY_FLAG
*/
/*
RETINOPATHY_FLAG 1 (IP patient)
*/
proc sql;
CREATE table dmtable.DEMO_RETINOPATHY_FLAG_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS RETINOPATHY_FLAG
FROM RCR_T2D_DEMO DEMO  JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&RETINOPATHY_FLAG_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&RETINOPATHY_FLAG_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI', 'IP')
	;
quit;

/*
RETINOPATHY_FLAG OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.DEMO_RETINOPATHY_FLAG_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS RETINOPATHY_FLAG
FROM RCR_T2D_DEMO DEMO JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&RETINOPATHY_FLAG_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&RETINOPATHY_FLAG_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
	;
quit;

/*
COMBIND TWO VIEWS TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_RETINOPATHY_FLAG AS
SELECT * FROM dmtable.DEMO_RETINOPATHY_FLAG_1
UNION (SELECT * FROM dmtable.DEMO_RETINOPATHY_FLAG_2 WHERE RETINOPATHY_FLAG = 1);
quit;

/*
TABLEs FOR STROKE_FLAG
*/
/*
STROKE_FLAG 1 (IP patient)
*/
proc sql;
CREATE table dmtable.DEMO_STROKE_FLAG_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS STROKE_FLAG
FROM RCR_T2D_DEMO DEMO  JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&STROKE_FLAG_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&STROKE_FLAG_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI', 'IP')
	;
quit;

/*
STROKE_FLAG OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.DEMO_STROKE_FLAG_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS STROKE_FLAG
FROM RCR_T2D_DEMO DEMO JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&STROKE_FLAG_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&STROKE_FLAG_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
	;
quit;

/*
COMBIND TWO TABLES TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_STROKE_FLAG AS
SELECT * FROM dmtable.DEMO_STROKE_FLAG_1
UNION (SELECT * FROM dmtable.DEMO_STROKE_FLAG_2 WHERE STROKE_FLAG = 1);
quit;

/*
TABLEs FOR TIA_FLAG	
*/
/*
TIA_FLAG	 1 (IP patient)
*/
proc sql;
CREATE table dmtable.DEMO_TIA_FLAG_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS TIA_FLAG	
FROM RCR_T2D_DEMO DEMO  JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&TIA_FLAG_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&TIA_FLAG_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI', 'IP')
	;
quit;

/*
TIA_FLAG	 OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.DEMO_TIA_FLAG_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS TIA_FLAG	
FROM RCR_T2D_DEMO DEMO JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&TIA_FLAG_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&TIA_FLAG_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
	;
quit;

/*
COMBIND TWO TABLES TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_TIA_FLAG AS
SELECT * FROM dmtable.DEMO_TIA_FLAG_1
UNION (SELECT * FROM dmtable.DEMO_TIA_FLAG_2 WHERE TIA_FLAG = 1);
quit;

/*
CAROTID_DISEASE_FLAG 1
*/
/*
TABLEs FOR CAROTID_DISEASE_FLAG	
*/
/*
CAROTID_DISEASE_FLAG 1 (IP patient)
*/
proc sql;
CREATE table dmtable.DEMO_CAROTID_DISEASE_FLAG_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS CAROTID_DISEASE_FLAG	
FROM RCR_T2D_DEMO DEMO  JOIN indata.PROCEDURES PREX on demo.patid=prex.patid
WHERE (
       (PX_TYPE= 'CH' AND compress(PX, '.') IN (&CAROTID_DISEASE_CH.))
        OR
       (PX_TYPE= '10' AND compress(PX, '.') IN (&CAROTID_DISEASE_10.))
		OR
	   (PX_TYPE= '09' AND compress(PX, '.') IN (&CAROTID_DISEASE_09.))
       )
	AND PREX.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND PREX.ENC_TYPE in ('EI', 'IP')
	;
quit;

/*
CAROTID_DISEASE_FLAG	 OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.DEMO_CAROTID_DISEASE_FLAG_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(PREX.ADMIT_DATE) -  MIN (PREX.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS CAROTID_DISEASE_FLAG	
FROM RCR_T2D_DEMO DEMO JOIN indata.PROCEDURES PREX on demo.patid=prex.patid
WHERE (
       (PX_TYPE= 'CH' AND compress(PX, '.') IN (&CAROTID_DISEASE_CH.))
        OR
       (PX_TYPE= '10' AND compress(PX, '.') IN (&CAROTID_DISEASE_10.))
		OR
	   (PX_TYPE= '09' AND compress(PX, '.') IN (&CAROTID_DISEASE_09.))
       )
	AND PREX.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND PREX.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
	;
quit;

/*
COMBIND TWO TABLES TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_CAROTID_DISEASE_FLAG AS
SELECT * FROM dmtable.DEMO_CAROTID_DISEASE_FLAG_1
UNION (SELECT * FROM dmtable.DEMO_CAROTID_DISEASE_FLAG_2 WHERE CAROTID_DISEASE_FLAG = 1);
quit;

/*
OBSTRUCT_CORONARY_FLAG
*/
/*
TABLEs FOR OBSTRUCT_CORONARY_FLAG	
*/
/*
OBSTRUCT_CORONARY_FLAG	 1 (IP patient)
*/
proc sql;
CREATE table dmtable.DEMO_OBSTRUCT_CORONARY_FLAG_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS OBSTRUCT_CORONARY_FLAG	
FROM RCR_T2D_DEMO DEMO  JOIN (SELECT PATID, ENCOUNTERID, ENC_TYPE, ADMIT_DATE, DX, DX_TYPE FROM indata.DIAGNOSIS
UNION
SELECT PATID, ENCOUNTERID, ENC_TYPE, ADMIT_DATE, PX AS DX, PX_TYPE||'P' AS DX_TYPE FROM indata.PROCEDURES) DIAG on demo.patid=diag.patid
WHERE 
( 
    (
     (DX_TYPE= '09' AND compress(DX, '.') IN (&OBSTRUCT_CORONARY_09.))
	  OR
	 (DX_TYPE= '10' AND compress(DX, '.') IN (&OBSTRUCT_CORONARY_10.))
     )
    OR
    (
	 (DX_TYPE= 'CHP' AND compress(DX, '.') IN (&OBSTRUCT_CORONARY_CHP.))
	  OR
	 (DX_TYPE= '09P' AND compress(DX, '.') IN (&OBSTRUCT_CORONARY_09P.))
	  OR
	 (DX_TYPE= '10P' AND compress(DX, '.') IN (&OBSTRUCT_CORONARY_10P.))
	)
)
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI', 'IP')
	;
quit;

/*
OBSTRUCT_CORONARY_FLAG	 OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.DEMO_OBSTRUCT_CORONARY_FLAG_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS OBSTRUCT_CORONARY_FLAG	
FROM 
RCR_T2D_DEMO DEMO  JOIN
(SELECT PATID, ENCOUNTERID, ENC_TYPE, ADMIT_DATE, DX, DX_TYPE FROM indata.DIAGNOSIS
UNION
SELECT PATID, ENCOUNTERID, ENC_TYPE, ADMIT_DATE, PX AS DX, PX_TYPE||'P' AS DX_TYPE FROM indata.PROCEDURES) DIAG on demo.patid=diag.patid
WHERE
( 
   (
     (DX_TYPE= '09' AND compress(DX, '.') IN (&OBSTRUCT_CORONARY_09.))
	  OR
	 (DX_TYPE= '10' AND compress(DX, '.') IN (&OBSTRUCT_CORONARY_10.))
     )
    OR
    (
	 (DX_TYPE= 'CHP' AND compress(DX, '.') IN (&OBSTRUCT_CORONARY_CHP.))
	  OR
	 (DX_TYPE= '09P' AND compress(DX, '.') IN (&OBSTRUCT_CORONARY_09P.))
	  OR
	 (DX_TYPE= '10P' AND compress(DX, '.') IN (&OBSTRUCT_CORONARY_10P.))
	)
)
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
;
quit;

/*
COMBIND TWO TABLES TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_OBSTRUCT_CORONARY_FLAG AS
SELECT * FROM dmtable.DEMO_OBSTRUCT_CORONARY_FLAG_1
UNION (SELECT * FROM dmtable.DEMO_OBSTRUCT_CORONARY_FLAG_2 WHERE OBSTRUCT_CORONARY_FLAG = 1);
quit;

/*
PERIPHERAL_ARTERY_FLAG
*/
/*
TABLEs FOR PERIPHERAL_ARTERY_FLAG	
*/
/*
PERIPHERAL_ARTERY_FLAG	 1 (IP patient)
*/
proc sql;
CREATE table dmtable.DEMO_PERIPHERAL_ARTERY_FLAG_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS PERIPHERAL_ARTERY_FLAG	
FROM RCR_T2D_DEMO DEMO  JOIN (SELECT PATID, ENCOUNTERID, ENC_TYPE, ADMIT_DATE, DX, DX_TYPE FROM indata.DIAGNOSIS
UNION
SELECT PATID, ENCOUNTERID, ENC_TYPE, ADMIT_DATE, PX AS DX, PX_TYPE||'P' AS DX_TYPE FROM indata.PROCEDURES) DIAG on demo.patid=diag.patid
WHERE 
( 
    (
     (DX_TYPE= '09' AND compress(DX, '.') IN (&PERIPHERAL_ARTERY_09.))
	  OR
	 (DX_TYPE= '10' AND compress(DX, '.') IN (&PERIPHERAL_ARTERY_10.))
     )
    OR
    (
	 (DX_TYPE= 'CHP' AND compress(DX, '.') IN (&PERIPHERAL_ARTERY_CHP.))
	  OR
	 (DX_TYPE= '09P' AND compress(DX, '.') IN (&PERIPHERAL_ARTERY_09P.))	  
	)
)
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI', 'IP')
	;
quit;

/*
PERIPHERAL_ARTERY_FLAG	 OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.DEMO_PERIPHERAL_ARTERY_FLAG_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS PERIPHERAL_ARTERY_FLAG	
FROM 
RCR_T2D_DEMO DEMO  JOIN
(SELECT PATID, ENCOUNTERID, ENC_TYPE, ADMIT_DATE, DX, DX_TYPE FROM indata.DIAGNOSIS
UNION
SELECT PATID, ENCOUNTERID, ENC_TYPE, ADMIT_DATE, PX AS DX, PX_TYPE||'P' AS DX_TYPE FROM indata.PROCEDURES) DIAG on demo.patid=diag.patid
WHERE
( 
    (
	  DIAG.DX_TYPE IN ( '09','10')
	  AND 
      compress(DIAG.DX, '.') IN (select CODE_CLEAN from infolder.part2_comorb_dx 
                                 where upcase(CONCEPT) = 'PERIPHERAL_ARTERY' and codetype = DIAG.DX_TYPE)
      )
    OR
    (
	  DIAG.DX_TYPE IN ('09P','10P','CHP')
	  AND 
       compress(DIAG.DX, '.') IN (select CODE_CLEAN from infolder.part2_comorb_px 
                                 where upcase(CONCEPT) = 'PERIPHERAL_ARTERY' and codetype = DIAG.DX_TYPE)
	)
)
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
;
quit;

/*
COMBIND TWO TABLES TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_PERIPHERAL_ARTERY_FLAG AS
SELECT * FROM dmtable.DEMO_PERIPHERAL_ARTERY_FLAG_1
UNION (SELECT * FROM dmtable.DEMO_PERIPHERAL_ARTERY_FLAG_2 WHERE PERIPHERAL_ARTERY_FLAG = 1);
quit;

/*
TABLEs FOR CARDIAC_VALVE_DISEASE_FLAG
*/
/* 
CARDIAC_VALVE_DISEASE_FLAG 1 (IP patient)
*/
proc sql;
CREATE table dmtable.DEMO_CARDIAC_VALVE_DISEASE_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS CARDIAC_VALVE_DISEASE_FLAG
FROM RCR_T2D_DEMO DEMO  JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&CARDIAC_VALVE_FLAG_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&CARDIAC_VALVE_FLAG_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI','IP')
	;
quit;

/*
CARDIAC_VALVE_DISEASE_FLAG OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.DEMO_CARDIAC_VALVE_DISEASE_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS CARDIAC_VALVE_DISEASE_FLAG
FROM RCR_T2D_DEMO DEMO JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&CARDIAC_VALVE_FLAG_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&CARDIAC_VALVE_FLAG_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
	;
quit;

/*
COMBIND TWO TABLES TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_CARDIAC_VALVE_DISEASE AS
SELECT * FROM dmtable.DEMO_CARDIAC_VALVE_DISEASE_1
UNION (SELECT * FROM dmtable.DEMO_CARDIAC_VALVE_DISEASE_2 WHERE CARDIAC_VALVE_DISEASE_FLAG = 1);
quit;

/*
ARRYTHMIA_CONDUCTION_DISORDER_FLAG 1 (IP patient)
*/
proc sql;
CREATE table dmtable.ARRYTHMIA_CONDUCTION_DISORDER_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS ARRYTHMIA_CONDUCTION_DISORDER
FROM RCR_T2D_DEMO DEMO  JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE
   ((DX_TYPE= '09' AND compress(DX, '.') IN (&ARR_COND_DISORDER_FLAG_09.))
	 OR
	(DX_TYPE= '10' AND compress(DX, '.') IN (&ARR_COND_DISORDER_FLAG_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI','IP')
	;
quit;

/*
ARRYTHMIA_CONDUCTION_DISORDER_FLAG OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.ARRYTHMIA_CONDUCTION_DISORDER_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS ARRYTHMIA_CONDUCTION_DISORDER
FROM RCR_T2D_DEMO DEMO JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE
   ((DX_TYPE= '09' AND compress(DX, '.') IN (&ARR_COND_DISORDER_FLAG_09.))
	 OR
	(DX_TYPE= '10' AND compress(DX, '.') IN (&ARR_COND_DISORDER_FLAG_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
	;
quit;

/*
COMBIND TWO TABLES TOGETHER
*/
proc sql;
CREATE table dmtable.ARRYTHMIA_CONDUCTION_DISORDER AS
SELECT * FROM dmtable.ARRYTHMIA_CONDUCTION_DISORDER_1
UNION (SELECT * FROM dmtable.ARRYTHMIA_CONDUCTION_DISORDER_2 WHERE ARRYTHMIA_CONDUCTION_DISORDER = 1);
quit;

/*
TABLEs FOR AFIB_FLAG
*/
/*
AFIB_FLAG 1 (IP patient)
*/
proc sql;
CREATE table dmtable.DEMO_AFIB_FLAG_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS AFIB_FLAG
FROM RCR_T2D_DEMO DEMO  JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE
   ((DX_TYPE= '09' AND compress(DX, '.') IN (&AFIB_FLAG_09.))
	 OR
	(DX_TYPE= '10' AND compress(DX, '.') IN(&AFIB_FLAG_10)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI', 'IP')
	;
quit;

/*
AFIB_FLAG OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.DEMO_AFIB_FLAG_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS AFIB_FLAG
FROM RCR_T2D_DEMO DEMO JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE
    ((DX_TYPE= '09' AND compress(DX, '.') IN (&AFIB_FLAG_09.))
	 OR
	(DX_TYPE= '10' AND compress(DX, '.') IN(&AFIB_FLAG_10)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
	;
quit;

/*
COMBIND TWO TABLES TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_AFIB_FLAG AS
SELECT * FROM dmtable.DEMO_AFIB_FLAG_1
UNION (SELECT * FROM dmtable.DEMO_AFIB_FLAG_2 WHERE AFIB_FLAG = 1);
quit;

/*
TABLEs FOR COPD_EMPHYSEMA_ASTHMA_FLAG
*/
/*
COPD_EMPHYSEMA_ASTHMA_FLAG 1 (IP patient)
*/
proc sql;
CREATE table dmtable.DEMO_COPD_EMPHYSEMA_ASTHMA_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS COPD_EMPHYSEMA_ASTHMA_FLAG
FROM RCR_T2D_DEMO DEMO  JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&COPD_EMPH_ASTH_FLAG_09.))
	   OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN(&COPD_EMPH_ASTH_FLAG_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI', 'IP')
	;
quit;

/*
COPD_EMPHYSEMA_ASTHMA_FLAG OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.DEMO_COPD_EMPHYSEMA_ASTHMA_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS COPD_EMPHYSEMA_ASTHMA_FLAG
FROM RCR_T2D_DEMO DEMO JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&COPD_EMPH_ASTH_FLAG_09.))
	   OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN(&COPD_EMPH_ASTH_FLAG_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
	;
quit;

/*
COMBIND TWO TABLES TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_COPD_EMPHYSEMA_ASTHMA_FLAG AS
SELECT * FROM dmtable.DEMO_COPD_EMPHYSEMA_ASTHMA_1
UNION (SELECT * FROM dmtable.DEMO_COPD_EMPHYSEMA_ASTHMA_2 WHERE COPD_EMPHYSEMA_ASTHMA_FLAG = 1);
quit;

/*
TABLEs FOR OXYGEN_THERAPY_FLAG
*/
/*
OXYGEN_THERAPY_FLAG 1 (IP patient)
*/
proc sql;
CREATE table dmtable.DEMO_OXYGEN_THERAPY_FLAG_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS OXYGEN_THERAPY_FLAG
FROM RCR_T2D_DEMO DEMO  JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&OXYGEN_THERAPY_FLAG_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN(&OXYGEN_THERAPY_FLAG_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI', 'IP')
	;
quit;

/*
OXYGEN_THERAPY_FLAG OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.DEMO_OXYGEN_THERAPY_FLAG_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS OXYGEN_THERAPY_FLAG
FROM RCR_T2D_DEMO DEMO JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&OXYGEN_THERAPY_FLAG_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN(&OXYGEN_THERAPY_FLAG_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
	;
quit;

/*
COMBIND TWO TABLES TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_OXYGEN_THERAPY_FLAG AS
SELECT * FROM dmtable.DEMO_OXYGEN_THERAPY_FLAG_1
UNION (SELECT * FROM dmtable.DEMO_OXYGEN_THERAPY_FLAG_2 WHERE OXYGEN_THERAPY_FLAG = 1);
quit;

/*
TABLEs FOR DEMENTIA_FLAG
*/
/*
DEMENTIA_FLAG 1 (IP patient)
*/
proc sql;
CREATE table dmtable.DEMO_DEMENTIA_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS DEMENTIA_FLAG
FROM RCR_T2D_DEMO DEMO  JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&DEMENTIA_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&DEMENTIA_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI', 'IP')
	;
quit;

/*
DEMENTIA_FLAG OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.DEMO_DEMENTIA_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS DEMENTIA_FLAG
FROM RCR_T2D_DEMO DEMO JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&DEMENTIA_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&DEMENTIA_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
	;
quit;

proc sql;
CREATE table dmtable.DEMO_DEMENTIA_3 AS
SELECT 
    DISTINCT
    DEMO.PATID 
    , 1 as DEMENTIA_FLAG
FROM RCR_T2D_DEMO DEMO 
    JOIN indata.PRESCRIBING RX ON RX.PATID = DEMO.PATID
    JOIN 
	infolder.SERIOUS_MENTAL_ILLNESS_MED 
    MED ON 
	 MED.RXNORM_CUI= RX.RXNORM_CUI
    JOIN indata.ENCOUNTER ENC ON ENC.ENCOUNTERID = RX.ENCOUNTERID
WHERE
    RX_ORDER_DATE BETWEEN (T1-730) AND (T1-1) AND ENC.ENC_TYPE IN ('AV', 'ED', 'EI', 'IP', 'IC') 
;
quit;

/*
COMBIND THREE TABLES TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_DEMENTIA AS
(SELECT * FROM dmtable.DEMO_DEMENTIA_1)
UNION (SELECT * FROM dmtable.DEMO_DEMENTIA_2 WHERE DEMENTIA_FLAG = 1)
UNION (SELECT * FROM dmtable.DEMO_DEMENTIA_3);
quit;

/*
TABLEs FOR SCHIZOPHRENIA_FLAG
*/
/*
SCHIZOPHRENIA_FLAG 1 (IP patient)
*/
proc sql;
CREATE table dmtable.DEMO_SCHIZOPHRENIA_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS SCHIZOPHRENIA_FLAG
FROM RCR_T2D_DEMO DEMO  JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&SCHIZOPHRENIA_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&SCHIZOPHRENIA_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI', 'IP')
	;
quit;

/*
SCHIZOPHRENIA_FLAG OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.DEMO_SCHIZOPHRENIA_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS SCHIZOPHRENIA_FLAG
FROM RCR_T2D_DEMO DEMO JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&SCHIZOPHRENIA_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN(&SCHIZOPHRENIA_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
	;
quit;

/*
COMBIND TWO TABLES TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_SCHIZOPHRENIA AS
SELECT * FROM dmtable.DEMO_SCHIZOPHRENIA_1
UNION (SELECT * FROM dmtable.DEMO_SCHIZOPHRENIA_2 WHERE SCHIZOPHRENIA_FLAG = 1);
quit;

/*
TABLEs FOR BIPOLAR_PSYCHO_DISPORDER_FLAG
*/
/*
BIPOLAR_PSYCHO_DISPORDER_FLAG 1 (IP patient)
*/
proc sql;
CREATE table dmtable.DEMO_BIPOLAR_PSYCHO_DISPORDER_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS BIPOLAR_PSYCHO_DISPORDER_FLAG
FROM RCR_T2D_DEMO DEMO  JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE
  ((DX_TYPE= '09' AND compress(DX, '.') IN (&BIPOLAR_PSYCHO_09.))
	OR
   (DX_TYPE= '10' AND compress(DX, '.') IN (&BIPOLAR_PSYCHO_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI', 'IP')
	;
quit;

/*
BIPOLAR_PSYCHO_DISPORDER_FLAG OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.DEMO_BIPOLAR_PSYCHO_DISPORDER_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS BIPOLAR_PSYCHO_DISPORDER_FLAG
FROM RCR_T2D_DEMO DEMO JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE
   ((DX_TYPE= '09' AND compress(DX, '.') IN (&BIPOLAR_PSYCHO_09.))
	OR
   (DX_TYPE= '10' AND compress(DX, '.') IN (&BIPOLAR_PSYCHO_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
	;
quit;

/*
COMBIND TWO TABLES TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_BIPOLAR_PSYCHO_DISPORDER AS
SELECT * FROM dmtable.DEMO_BIPOLAR_PSYCHO_DISPORDER_1
UNION (SELECT * FROM dmtable.DEMO_BIPOLAR_PSYCHO_DISPORDER_2 WHERE BIPOLAR_PSYCHO_DISPORDER_FLAG = 1);
quit;

/*
TABLEs FOR PTSD_FLAG
*/
/*
PTSD_FLAG 1 (IP patient)
*/
proc sql;
CREATE table dmtable.DEMO_PTSD_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS PTSD_FLAG
FROM RCR_T2D_DEMO DEMO  JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&PTSD_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&PTSD_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI','IP')
	;
quit;

/*
PTSD_FLAG OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.DEMO_PTSD_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS PTSD_FLAG
FROM RCR_T2D_DEMO DEMO JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&PTSD_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&PTSD_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
	;
quit;

/*
COMBIND TWO TABLES TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_PTSD AS
SELECT * FROM dmtable.DEMO_PTSD_1
UNION (SELECT * FROM dmtable.DEMO_PTSD_2 WHERE PTSD_FLAG = 1);
quit;

/*
TABLEs FOR DEPRESSION_FLAG
*/
/*
DEPRESSION_FLAG 1 (IP patient)
*/
proc sql;
CREATE table dmtable.DEMO_DEPRESSION_FLAG_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS DEPRESSION_FLAG
FROM RCR_T2D_DEMO DEMO  JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&DEPRESSION_FLAG_09.))
		OR
	   (DX_TYPE= '10' AND compress(DX, '.') IN (&DEPRESSION_FLAG_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI', 'IP')
	;
quit;

/*
DEPRESSION_FLAG OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.DEMO_DEPRESSION_FLAG_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS DEPRESSION_FLAG
FROM RCR_T2D_DEMO DEMO JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&DEPRESSION_FLAG_09.))
		OR
	   (DX_TYPE= '10' AND compress(DX, '.') IN (&DEPRESSION_FLAG_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
	;
quit;

/*
COMBIND TWO TABLES TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_DEPRESSION_FLAG AS
SELECT * FROM dmtable.DEMO_DEPRESSION_FLAG_1
UNION (SELECT * FROM dmtable.DEMO_DEPRESSION_FLAG_2 WHERE DEPRESSION_FLAG = 1);
quit;

/*
TABLEs FOR PARKINSONS_FLAG
*/
/*
PARKINSONS_FLAG 1 (IP patient)
*/
proc sql;
CREATE table dmtable.DEMO_PARKINSONS_FLAG_1 AS
SELECT DISTINCT DEMO.PATID , 1 AS PARKINSONS_FLAG
FROM RCR_T2D_DEMO DEMO  JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&PARKINSONS_FLAG_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN (&PARKINSONS_FLAG_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE in ('EI','IP')
	;
quit;

/*
PARKINSONS_FLAG OTHER PATIENTS
*/
proc sql;
CREATE table dmtable.DEMO_PARKINSONS_FLAG_2 AS
SELECT DEMO.PATID 
, CASE WHEN MAX(DIAG.ADMIT_DATE) -  MIN (DIAG.ADMIT_DATE) > 30 THEN 1
		ELSE 0 END AS PARKINSONS_FLAG
FROM RCR_T2D_DEMO DEMO JOIN indata.DIAGNOSIS DIAG on demo.patid=diag.patid
WHERE ((DX_TYPE= '09' AND compress(DX, '.') IN (&PARKINSONS_FLAG_09.))
		OR
	  (DX_TYPE= '10' AND compress(DX, '.') IN(&PARKINSONS_FLAG_10.)))
	AND DIAG.ADMIT_DATE BETWEEN (T1-730) AND (T1-1) AND DIAG.ENC_TYPE IN ('AV', 'ED')
	
GROUP BY 1
	;
quit;

proc sql;
CREATE table dmtable.DEMO_PARKINSONS_FLAG_3 AS
SELECT 
    DISTINCT
    DEMO.PATID 
    , 1 as PARKINSONS_FLAG
FROM RCR_T2D_DEMO DEMO 
    JOIN indata.PRESCRIBING RX ON RX.PATID = DEMO.PATID
    JOIN  infolder.PARKINSONS_FLAG_MED 

	MED ON MED.RXNORM_CUI = RX.RXNORM_CUI
    JOIN indata.ENCOUNTER ENC ON ENC.ENCOUNTERID = RX.ENCOUNTERID
WHERE
    RX_ORDER_DATE BETWEEN (T1-730) AND (T1-1) AND ENC.ENC_TYPE IN ('AV', 'ED', 'EI', 'IP', 'IC') 
;
quit;

/*
COMBIND THREE TABLES TOGETHER
*/
proc sql;
CREATE table dmtable.DEMO_PARKINSONS_FLAG AS
(SELECT * FROM dmtable.DEMO_PARKINSONS_FLAG_1)
UNION (SELECT * FROM dmtable.DEMO_PARKINSONS_FLAG_2 WHERE PARKINSONS_FLAG = 1)
UNION (SELECT * FROM dmtable.DEMO_PARKINSONS_FLAG_3);
quit;

/*
CREATE TABLE DEMO 1
*/
proc sql;
CREATE TABLE dmtable.RCR_T2D_DEMO_FLAG_A AS
SELECT 
DEMO.*
	,coalesce(NUM_INPATIENT_VISITS, 0) as NUM_INPATIENT_VISITS
	,coalesce(NUM_ED_VISITS, 0) as NUM_ED_VISITS
	,coalesce(NUM_OUTPATIENT_VISITS, 0) as NUM_OUTPATIENT_VISITS
	,coalesce(HTN_FLAG, 0) as HTN_FLAG
	,coalesce(LIPID_DISORDERS_FLAG, 0) as LIPID_DISORDERS_FLAG
	,coalesce(CANCER_FLAG, 0) as CANCER_FLAG
	,coalesce(LIVER_DISEASE_FLAG, 0) as LIVER_DISEASE_FLAG
	,coalesce(PULMONARY_FLAG, 0) as PULMONARY_FLAG
	,coalesce(CHF_FLAG, 0) as CHF_FLAG
FROM RCR_T2D_DEMO DEMO
	LEFT JOIN dmtable.DEMO_NUM_IP a on demo.patid=a.patid
	LEFT JOIN dmtable.DEMO_NUM_ED b on demo.patid=b.patid
	LEFT JOIN dmtable.DEMO_NUM_OP c on demo.patid=c.patid
	LEFT JOIN dmtable.DEMO_HTN_FLAG d on demo.patid=d.patid
	LEFT JOIN dmtable.DEMO_LIPID_DISORDERS_FLAG e on demo.patid=e.patid
	LEFT JOIN dmtable.DEMO_CANCER_FLAG f on demo.patid=f.patid
	LEFT JOIN dmtable.DEMO_LIVER_DISEASE_FLAG g on demo.patid=g.patid
	LEFT JOIN dmtable.DEMO_PULMONARY_FLAG h on demo.patid=h.patid
	LEFT JOIN dmtable.DEMO_CHF_FLAG i on demo.patid=i.patid
;
quit;

proc sql;
CREATE TABLE dmtable.RCR_T2D_DEMO_FLAG_B AS

SELECT 
DEMO.*
	,coalesce(RETINOPATHY_FLAG, 0) as RETINOPATHY_FLAG
	,coalesce(STROKE_FLAG, 0) as STROKE_FLAG
	,coalesce(TIA_FLAG, 0) as TIA_FLAG
	,coalesce(CAROTID_DISEASE_FLAG, 0) as CAROTID_DISEASE_FLAG
	,coalesce(OBSTRUCT_CORONARY_FLAG, 0) as OBSTRUCT_CORONARY_FLAG
	,coalesce(PERIPHERAL_ARTERY_FLAG, 0) as PERIPHERAL_ARTERY_FLAG
	,coalesce(CARDIAC_VALVE_DISEASE_FLAG, 0) as CARDIAC_VALVE_DISEASE_FLAG
	,coalesce(ARRYTHMIA_CONDUCTION_DISORDER, 0) as ARRYTHMIA_CONDUCTION_DISORDER


FROM dmtable.RCR_T2D_DEMO_FLAG_A DEMO
	LEFT JOIN dmtable.DEMO_RETINOPATHY_FLAG  a on demo.patid=a.patid
	LEFT JOIN dmtable.DEMO_STROKE_FLAG  b on demo.patid=b.patid
	LEFT JOIN dmtable.DEMO_TIA_FLAG  c on demo.patid=c.patid
	LEFT JOIN dmtable.DEMO_CAROTID_DISEASE_FLAG  d on demo.patid=d.patid
	LEFT JOIN dmtable.DEMO_OBSTRUCT_CORONARY_FLAG  e on demo.patid=e.patid
	LEFT JOIN dmtable.DEMO_PERIPHERAL_ARTERY_FLAG  f on demo.patid=f.patid
	LEFT JOIN dmtable.DEMO_CARDIAC_VALVE_DISEASE  g on demo.patid=g.patid
	LEFT JOIN dmtable.ARRYTHMIA_CONDUCTION_DISORDER  h on demo.patid=h.patid
;
quit;

proc sql;
CREATE TABLE dmtable.RCR_T2D_DEMO_FLAG AS

SELECT 
DISTINCT
DEMO.*

,coalesce(AFIB_FLAG, 0) as AFIB_FLAG
,coalesce(COPD_EMPHYSEMA_ASTHMA_FLAG, 0) as COPD_EMPHYSEMA_ASTHMA_FLAG
,coalesce(OXYGEN_THERAPY_FLAG, 0) as OXYGEN_THERAPY_FLAG
,coalesce(DEMENTIA_FLAG, 0) as DEMENTIA_FLAG
,coalesce(SCHIZOPHRENIA_FLAG, 0) as SCHIZOPHRENIA_FLAG
,coalesce(BIPOLAR_PSYCHO_DISPORDER_FLAG, 0) as BIPOLAR_PSYCHO_DISPORDER_FLAG
,coalesce(PTSD_FLAG, 0) as PTSD_FLAG
,coalesce(DEPRESSION_FLAG, 0) as DEPRESSION_FLAG
,coalesce(PARKINSONS_FLAG, 0) as PARKINSONS_FLAG

FROM dmtable.RCR_T2D_DEMO_FLAG_B DEMO

LEFT JOIN dmtable.DEMO_AFIB_FLAG a on demo.patid=a.patid
LEFT JOIN dmtable.DEMO_COPD_EMPHYSEMA_ASTHMA_FLAG b on demo.patid=b.patid
LEFT JOIN dmtable.DEMO_OXYGEN_THERAPY_FLAG c on demo.patid=c.patid
LEFT JOIN dmtable.DEMO_DEMENTIA d on demo.patid=d.patid
LEFT JOIN dmtable.DEMO_SCHIZOPHRENIA e on demo.patid=e.patid
LEFT JOIN dmtable.DEMO_BIPOLAR_PSYCHO_DISPORDER f on demo.patid=f.patid
LEFT JOIN dmtable.DEMO_PTSD g on demo.patid=g.patid
LEFT JOIN dmtable.DEMO_DEPRESSION_FLAG h on demo.patid=h.patid
LEFT JOIN dmtable.DEMO_PARKINSONS_FLAG i on demo.patid=i.patid
;
quit;

/* TAB 2 ADMISSIONs */
proc sql;
create table dmtable.addmissions as
SELECT DISTINCT DEMO.PATID, ENC.ADMIT_DATE, ENC.ENC_TYPE
FROM dmlocal.T1712_SELECTED_CASES DEMO,
	indata.ENCOUNTER ENC
WHERE DEMO.PATID = ENC.PATID 
AND ENC.ENC_TYPE IN ('IP', 'EI', 'ED', 'AV') 
AND( ENC.ADMIT_DATE BETWEEN (T1-365) AND (T1-1))
ORDER BY PATID, ADMIT_DATE, ENC_TYPE
;
quit;

/*
TAB 3 VITAL
*/

proc sql;
CREATE table V_RCR_T2D_VITAL_RANK1 AS
SELECT DISTINCT
	DEMO.PATID
	, ROUND(VIT.WT) as WEIGHT
	, ROUND(DIASTOLIC) as DIASTOLIC_BP
	, ROUND(SYSTOLIC) as SYSTOLIC_BP
	, measure_date
	,  (put(MEASURE_DATE,yymmddn8.) ||' '||MEASURE_TIME) AS MEASURE_DATE1	
	,    (CASE 
					WHEN WT IS NULL OR WT > 900 OR WT < 50 THEN 1 
					ELSE 0 END) 
		 as RANK_WT
		
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO JOIN dmtable.vital VIT on demo.patid=vit.patid
WHERE VIT.MEASURE_DATE BETWEEN (T1-365) AND (T1-1)
;
quit;

proc sort data=V_RCR_T2D_VITAL_RANK1;
by patid rank_WT descending measure_date1;
run;

proc sort data =V_RCR_T2D_VITAL_RANK1 nodupkey;
by patid;
run;

proc sql;
CREATE table V_RCR_T2D_VITAL_RANK2 AS
SELECT DISTINCT
	DEMO.PATID
	, ROUND(VIT.WT) as WEIGHT
	, ROUND(DIASTOLIC) as DIASTOLIC_BP
	, ROUND(SYSTOLIC) as SYSTOLIC_BP
	, measure_date
	,  (put(MEASURE_DATE,yymmddn8.) ||' '||MEASURE_TIME) AS MEASURE_DATE2	
	,    (CASE 
					WHEN DIASTOLIC IS NULL OR SYSTOLIC IS NULL OR SYSTOLIC > 180 OR SYSTOLIC < 10 OR DIASTOLIC > 180 OR DIASTOLIC < 10 THEN 1 
					ELSE 0 END) 
		 as RANK_BP
		
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO JOIN dmtable.VITAL VIT on demo.patid=vit.patid
WHERE VIT.MEASURE_DATE BETWEEN (T1-365) AND (T1-1)
;
quit;

proc sort data=V_RCR_T2D_VITAL_RANK2;
by patid rank_BP descending measure_date2;
run;

proc sort data =V_RCR_T2D_VITAL_RANK2 nodupkey;
by patid;
run;

data V_RCR_T2D_VITAL_RANK;
set V_RCR_T2D_VITAL_RANK1;
keep patid;
run;

proc sql;
CREATE table dmtable.VITAL_WT_BP AS
SELECT DISTINCT T.PATID
	, WT.WEIGHT
	, WT.MEASURE_DATE AS WT_MEASURE_DATE
	, BP.DIASTOLIC_BP 
	, BP.SYSTOLIC_BP
	, BP.MEASURE_DATE AS BP_MEASURE_DATE
	
FROM 
    V_RCR_T2D_VITAL_RANK T
	JOIN V_RCR_T2D_VITAL_RANK1 WT ON T.PATID = WT.PATID 
	JOIN V_RCR_T2D_VITAL_RANK2 BP ON T.PATID = BP.PATID 
;
quit;

/*
height
*/

proc sql;
CREATE table dmtable.VITAL_HT AS
SELECT 
DISTINCT DEMO.PATID
, ROUND(median(HT)) as HEIGHT

FROM
	dmlocal.T1712_SELECTED_CASES DEMO
	JOIN dmtable.vital VIT
ON DEMO.PATID = VIT.PATID 
WHERE (VIT.MEASURE_DATE BETWEEN (T1-365) AND (T1-1)) AND ( HT BETWEEN 48 AND 90)
GROUP BY DEMO.PATID;
quit;

proc sql;
CREATE table dmtable.VITAL_SMOKING AS
SELECT 
DISTINCT DEMO.PATID
, SMOKING as SMOKING_STATUS
, MEASURE_DATE as SMOKING_STATUS_DATE
FROM
	dmlocal.T1712_SELECTED_CASES DEMO
	JOIN dmtable.VITAL VIT
ON DEMO.PATID = VIT.PATID 
WHERE (VIT.MEASURE_DATE BETWEEN (T1-365) AND (T1-1)) AND SMOKING is NOT NULL;
quit;

proc sort data=dmtable.VITAL_SMOKING;
by patid descending smoking_status descending SMOKING_STATUS_DATE;
run;

proc sort data =dmtable.VITAL_SMOKING nodupkey;
by patid;
run;

/*
JOIN TABLES VITAL_HT VITAL_SMOKING VITAL_WT_BP
*/
/*
export out the tab result
*/
proc sql;
CREATE TABLE dmtable.RCR_T2D_VITAL AS
SELECT DISTINCT DEMO.PATID, T1
, HEIGHT, WEIGHT, WT_MEASURE_DATE
, Median(DIASTOLIC_BP) AS DIASTOLIC_BP
, Median(SYSTOLIC_BP) AS SYSTOLIC_BP
, BP_MEASURE_DATE 
, CASE WHEN HEIGHT <> . AND WEIGHT <>. THEN ROUND(WEIGHT/HEIGHT/HEIGHT*703)	ELSE . END AS BMI
, smoking_status
, SMOKING_STATUS_DATE
FROM
	dmlocal.t1712_SELECTED_CASES DEMO
	 LEFT JOIN dmtable.VITAL_HT HT on demo.patid=ht.patid
	  LEFT JOIN dmtable.VITAL_WT_BP BP on demo.patid=bp.patid
	   LEFT JOIN  dmtable.VITAL_SMOKING SM on demo.patid=sm.patid
	   GROUP BY 1, 2,3,4,5,8, 9, 10, 11
	;  
quit;

/*
A1C lab
*/
proc sql;
/*drop table t1;*/
create table t1 as
SELECT demo.PATID,RAW_LAB_NAME
	,LAB_LOINC,LAB_ORDER_DATE,RESULT_DATE
	,SPECIMEN_SOURCE,RESULT_NUM as LAB_VALUE
FROM
	dmlocal.T1712_SELECTED_CASES DEMO
	JOIN
indata.LAB_RESULT_CM LAB on demo.patid=lab.patid
WHERE lab.LAB_LOINC IN (&A1C_LOINC.)
AND LAB.RESULT_DATE BETWEEN (T1-365) AND (T1-1)
;
quit;

proc sort data=t1;
by patid  descending RESULT_DATE ;
run;

proc sort data=t1 nodupkey;
by patid;
run;

proc sql;
CREATE table dmtable.RCR_T2D_A1C AS
SELECT PATID
,RAW_LAB_NAME
,LAB_LOINC
,LAB_ORDER_DATE
,RESULT_DATE
,SPECIMEN_SOURCE
,LAB_VALUE
, . as eGFR_CALCULATED
FROM
t1
;
quit;

/*
LDL lab
*/
proc sql;
drop table t1;
create table t1 as
SELECT demo.PATID
,RAW_LAB_NAME
,LAB_LOINC
,LAB_ORDER_DATE
,RESULT_DATE
,SPECIMEN_SOURCE
,RESULT_NUM as LAB_VALUE
FROM
	dmlocal.T1712_SELECTED_CASES DEMO
	JOIN
indata.LAB_RESULT_CM LAB on demo.patid=lab.patid
WHERE LAB_LOINC IN (&LDL_LOINC.)
AND LAB.RESULT_DATE BETWEEN (T1-365) AND (T1-1) 
;
quit;

proc sort data=t1;
by patid  descending RESULT_DATE ;
run;

proc sort data=t1 nodupkey;
by patid;
run;

proc sql;
CREATE table dmtable.RCR_T2D_LDL AS
SELECT PATID
,RAW_LAB_NAME
,LAB_LOINC
,LAB_ORDER_DATE
,RESULT_DATE
,SPECIMEN_SOURCE
,LAB_VALUE
, . as eGFR_CALCULATED
FROM
t1
;
quit;

/*
CREATININE Lab
*/
proc sql;
drop table t1;
create table t1 as
SELECT demo.PATID
,RAW_LAB_NAME
,LAB_LOINC
,LAB_ORDER_DATE
,RESULT_DATE
,SPECIMEN_SOURCE
,RESULT_NUM as LAB_VALUE,
Lab.result_UNIT
FROM
	dmlocal.T1712_SELECTED_CASES DEMO
	JOIN
indata.LAB_RESULT_CM LAB on demo.patid=lab.patid
WHERE LAB_LOINC IN 
(&CREATININE_LOINC.)
AND lower(compress(RESULT_UNIT)) = 'mg/dl'
AND LAB.RESULT_DATE BETWEEN (T1-365) AND (T1-1) 
;
quit;

proc sort data=t1;
by patid  descending RESULT_DATE ;
run;

proc sort data=t1 nodupkey;
by patid;
run;

proc sql;
CREATE table dmtable.RCR_T2D_CREATININE AS
SELECT 
distinct
PATID
,RAW_LAB_NAME
,LAB_LOINC
,LAB_ORDER_DATE
,RESULT_DATE
,SPECIMEN_SOURCE
,LAB_VALUE
,result_UNIT
, . as eGFR_CALCULATED
FROM
t1;
quit
;

/*
CREATININE_EGFR
*/
proc sql;
drop table t1;
create table t1 as
SELECT 
demo.PATID
,RAW_LAB_NAME
,LAB_LOINC
,LAB_ORDER_DATE
,RESULT_DATE
,SPECIMEN_SOURCE
,LAB_VALUE
,RESULT_UNIT
, ROUND((RESULT_DATE - BIRTH_DATE)/365.2422, 1) AS age
, CASE WHEN SEX = 'F' THEN 0.7 ELSE 0.9 END AS KAPPA
, CASE WHEN SEX = 'F' THEN 1.018 ELSE 1.0 END AS SEX_ADJ
, CASE WHEN RACE = '03' THEN 1.159 ELSE 1.0 END AS RACE_ADJ
, CASE WHEN SEX = 'F' THEN -0.329 ELSE -0.411 END AS ALPHA
from dmtable.RCR_T2D_CREATININE CRE join indata.DEMOGRAPHIC demo on demo.patid=cre.patid
;
quit;

proc sql;
create table dmtable.RCR_T2D_CREATININE_EGFR AS
SELECT PATID
,RAW_LAB_NAME
,LAB_LOINC
,LAB_ORDER_DATE
,RESULT_DATE
,SPECIMEN_SOURCE
,LAB_VALUE
, 
CASE 
	WHEN UPPER(COMPRESS(RESULT_UNIT)) = 'MG/DL' THEN
ROUND(141 * MIN (LAB_VALUE /KAPPA , 1)** ALPHA 
* MAX(LAB_VALUE /KAPPA , 1) **( - 1.209) * 0.993 ** AGE 
* SEX_ADJ * RACE_ADJ )
	ELSE . END AS EGFR_CALCULATED
from t1;
quit;

/*
export lab results
*/
proc sql;
CREATE TABLE dmtable.RCR_T2D_LAB AS
SELECT * FROM dmtable.RCR_T2D_A1C
UNION 
SELECT * FROM dmtable.RCR_T2D_LDL
UNION 
SELECT PATID, RAW_LAB_NAME, LAB_LOINC, LAB_ORDER_DATE
, RESULT_DATE, SPECIMEN_SOURCE, LAB_VALUE, EGFR_CALCULATED 
FROM dmtable.RCR_T2D_CREATININE_EGFR
;
quit;

/*
RCR_T2D_CHAR_MEDS 
*/
proc sql;
drop table t1;
create table t1 as
SELECT 
DISTINCT
		DEMO.PATID
		, rx.RAW_RX_MED_NAME as RX_NAME
		, CASE WHEN rx.RXNORM_CUI = 'NI' THEN ''
			ELSE rx.RXNORM_CUI END AS RXNORM_CUI
		, coalesce(RX_ORDER_DATE,RX_START_DATE ) as RX_DATE
		, rx.RX_DOSE_FORM as RX_UNIT
		, rx.RX_REFILLS
		, rx.RX_DAYS_SUPPLY
        , rx.encounterid 
FROM 
		dmlocal.T1712_SELECTED_CASES DEMO
			JOIN indata.PRESCRIBING RX on demo.patid=rx.patid 
 AND coalesce(RX_ORDER_DATE,RX_START_DATE )  BETWEEN (T1-730) AND (T1-1)			
;
quit;

proc sql;
CREATE TABLE dmtable.RCR_T2D_CHAR_MEDS AS
select 
distinct 
t1.patid
, RX_NAME
		, RXNORM_CUI
		, RX_DATE
		, RX_UNIT
		, RX_REFILLS
		, RX_DAYS_SUPPLY
from
t1 rx
		 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID 
WHERE
(

RX.RXNORM_CUI IN (SELECT RXNORM_CUI FROM infolder.RCR_T2D_MEDS))
 AND (
 ENC.ENC_TYPE ='AV'

 )
;
quit;

/*
RCR_T2D_CHAR_MED_FLAG
*/
proc sql;
create TABLE dmtable.RCR_T2D_CHAR_MED_FLAG as
SELECT 
DISTINCT
X.PATID
    , MAX(ACE_ARB_FLAG) AS ACE_ARB_FLAG
	, MAX(ANTI_ARRHYTH_FLAG) AS ANTI_ARRHYTH_FLAG
	, MAX(ANTICOAG_FLAG) AS ANTICOAG_FLAG
	, MAX(ANTIPSYC_MEDS_FLAG) AS ANTIPSYC_MEDS_FLAG
	, MAX(ASPIRIN_FLAG) AS ASPIRIN_FLAG
	, MAX(BETA_BLOCKER_FLAG) AS BETA_BLOCKER_FLAG
	, MAX(BONE_RESORP_INHIB_FLAG) AS BONE_RESORP_INHIB_FLAG
	, MAX(CALCIUM_CHAN_BLOCK_FLAG) AS CALCIUM_CHAN_BLOCK_FLAG
	, MAX(DIGOXIN_FLAG) AS 	DIGOXIN_FLAG
	, MAX(LIPID_LOW_NON_STAT_FLAG) AS LIPID_LOW_NON_STAT_FLAG
	, MAX(LIPID_LOW_STATINS_FLAG) AS LIPID_LOW_STATINS_FLAG
	, MAX(LOOP_DIURETICS_FLAG) AS LOOP_DIURETICS_FLAG
	, MAX(NITRATES_FLAG) AS NITRATES_FLAG
	, MAX(NON_SEL_ALPHA_BL_FLAG) AS NON_SEL_ALPHA_BL_FLAG
	, MAX(ORAL_GLUCOCORT_FLAG) AS ORAL_GLUCOCORT_FLAG
	, MAX(OTHER_ANTIHYPER_FLAG) AS OTHER_ANTIHYPER_FLAG
	, MAX(PERIPH_VASO_FLAG) AS PERIPH_VASO_FLAG
	, MAX(PLATET_INHIB_N_ASP_FLAG) AS PLATET_INHIB_N_ASP_FLAG
	, MAX(THIAZIDE_DIURETICS_FLAG) AS THIAZIDE_DIURETICS_FLAG  

FROM
(SELECT 
	DISTINCT 
	DEMO.PATID 
	,CASE WHEN MEDS_FLAG ='ACE_ARB' THEN 1 ELSE 0 END AS ACE_ARB_FLAG
	,CASE WHEN MEDS_FLAG ='ANTI_ARRHYTH' THEN 1 ELSE 0 END AS ANTI_ARRHYTH_FLAG
	,CASE WHEN MEDS_FLAG ='ANTICOAG' THEN 1 ELSE 0 END AS ANTICOAG_FLAG
	,CASE WHEN MEDS_FLAG ='ANTIPSYC_MEDS' THEN 1 ELSE 0 END AS ANTIPSYC_MEDS_FLAG
	,CASE WHEN MEDS_FLAG ='ASPIRIN' THEN 1 ELSE 0 END AS ASPIRIN_FLAG
	,CASE WHEN MEDS_FLAG ='BETA_BLOCKER' THEN 1 ELSE 0 END AS BETA_BLOCKER_FLAG
	,CASE WHEN MEDS_FLAG ='BONE_RESORP_INHIB' THEN 1 ELSE 0 END AS BONE_RESORP_INHIB_FLAG
	,CASE WHEN MEDS_FLAG ='CALCIUM_CHAN_BLOCK' THEN 1 ELSE 0 END AS CALCIUM_CHAN_BLOCK_FLAG
	,CASE WHEN MEDS_FLAG ='DIGOXIN' THEN 1 ELSE 0 END AS DIGOXIN_FLAG
	,CASE WHEN MEDS_FLAG ='LIPID_LOW_NON_STAT' THEN 1 ELSE 0 END AS LIPID_LOW_NON_STAT_FLAG
	,CASE WHEN MEDS_FLAG ='LIPID_LOW_STATINS' THEN 1 ELSE 0 END AS LIPID_LOW_STATINS_FLAG
	,CASE WHEN MEDS_FLAG ='LOOP_DIURETICS' THEN 1 ELSE 0 END AS LOOP_DIURETICS_FLAG
	,CASE WHEN MEDS_FLAG ='NITRATES' THEN 1 ELSE 0 END AS NITRATES_FLAG
	,CASE WHEN MEDS_FLAG ='NON_SEL_ALPHA_BL' THEN 1 ELSE 0 END AS NON_SEL_ALPHA_BL_FLAG
	,CASE WHEN MEDS_FLAG ='ORAL_GLUCOCORT' THEN 1 ELSE 0 END AS ORAL_GLUCOCORT_FLAG
	,CASE WHEN MEDS_FLAG ='OTHER_ANTIHYPER' THEN 1 ELSE 0 END AS OTHER_ANTIHYPER_FLAG
	,CASE WHEN MEDS_FLAG ='PERIPH_VASO' THEN 1 ELSE 0 END AS PERIPH_VASO_FLAG
	,CASE WHEN MEDS_FLAG ='PLATET_INHIB_N_ASP' THEN 1 ELSE 0 END AS PLATET_INHIB_N_ASP_FLAG
	,CASE WHEN MEDS_FLAG ='THIAZIDE_DIURETICS' THEN 1 ELSE 0 END AS THIAZIDE_DIURETICS_FLAG 
		

FROM 
		dmlocal.T1712_SELECTED_CASES DEMO
			JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
		 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
					JOIN infolder.RCR_T2D_MEDS MED ON MED.RXNORM_CUI = RX.RXNORM_CUI


WHERE (ENC.ENC_TYPE ='AV'

 )

 AND coalesce(RX_ORDER_DATE,RX_START_DATE )  BETWEEN (T1-730) AND (T1-1)

	) X
	GROUP BY 1
;
quit;

proc sql;
drop table t1;
create table t1 as
SELECT 
DISTINCT
PATID
    ,0 as ACE_ARB_FLAG
	,0 as ANTI_ARRHYTH_FLAG
	,0 as ANTICOAG_FLAG
	,0 as ANTIPSYC_MEDS_FLAG
	,0 as ASPIRIN_FLAG 
	,0 as BETA_BLOCKER_FLAG
	,0 as BONE_RESORP_INHIB_FLAG
	,0 as CALCIUM_CHAN_BLOCK_FLAG
	,0 as DIGOXIN_FLAG
	,0 as LIPID_LOW_NON_STAT_FLAG
	,0 as LIPID_LOW_STATINS_FLAG
	,0 as LOOP_DIURETICS_FLAG
	,0 as NITRATES_FLAG
	,0 as NON_SEL_ALPHA_BL_FLAG
	,0 as ORAL_GLUCOCORT_FLAG
	,0 as OTHER_ANTIHYPER_FLAG
	,0 as PERIPH_VASO_FLAG
	,0 as PLATET_INHIB_N_ASP_FLAG
	,0 as THIAZIDE_DIURETICS_FLAG 
	FROM dmlocal.T1712_SELECTED_CASES WHERE PATID NOT IN (SELECT PATID FROM dmtable.RCR_T2D_CHAR_MED_FLAG);
quit;

data dmtable.RCR_T2D_CHAR_MED_FLAG;
set dmtable.RCR_T2D_CHAR_MED_FLAG t1;
run;

/*	
RCR_T2D_MEDS_GROUPING;
*/
proc sql;
create table  dmtable.RCR_T2D_MEDS_GROUPING_Y as
SELECT 
		DISTINCT
		DEMO.PATID
		, RAW_RX_MED_NAME as RX_NAME
		, CASE WHEN rx.RXNORM_CUI = 'NI' THEN ''
			ELSE rx.RXNORM_CUI END AS RXNORM_CUI
		, coalesce(RX_ORDER_DATE,RX_START_DATE ) as RX_DATE
		, RX_DOSE_FORM as RX_UNIT
		, RX_REFILLS
		, RX_DAYS_SUPPLY

FROM 
		dmlocal.T1712_SELECTED_CASES DEMO
			JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
		 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
				JOIN infolder.RCRT2D_MED_rxnorm MED_grp ON  MED_grp.RXNORM_CUI = RX.RXNORM_CUI

WHERE
(
 ENC.ENC_TYPE IN NOT ('IP','ED','EI')
)

 AND coalesce(RX_ORDER_DATE,RX_START_DATE )  BETWEEN (T1-730) AND (T1+365)
;
quit;

proc sql;
create table  dmtable.RCR_T2D_MEDS_GROUPING as
SELECT 
		DISTINCT
		DEMO.PATID
		, RAW_RX_MED_NAME as RX_NAME
		, CASE WHEN rx.RXNORM_CUI = 'NI' THEN ''
			ELSE rx.RXNORM_CUI END AS RXNORM_CUI
		, coalesce(RX_ORDER_DATE,RX_START_DATE ) as RX_DATE
		, RX_DOSE_FORM as RX_UNIT
		, RX_REFILLS
		, RX_DAYS_SUPPLY

FROM 
		dmlocal.T1712_SELECTED_CASES DEMO
			JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
		 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
				JOIN infolder.RCRT2D_MED_rxnorm MED_grp ON  MED_grp.RXNORM_CUI = RX.RXNORM_CUI

WHERE
(
 ENC.ENC_TYPE IN NOT ('IP','ED','EI')
)

 AND coalesce(RX_ORDER_DATE,RX_START_DATE )  BETWEEN (T1-730) AND (T1-1)
;
quit;
	
/*
RCR_T2D_MEDS_GROUPING_FLAG
*/
proc sql;
create table dmtable.RCR_T2D_MEDS_GROUPING_FLAG as
SELECT 
DISTINCT
X.PATID
,MAX(ALL_INSULIN_FLAG) AS ALL_INSULIN_FLAG
,MAX(ALPHA_GLUC_INHIB_FLAG) AS ALPHA_GLUC_INHIB_FLAG
,MAX(DPP4_ALOGLITPIN_FLAG) AS DPP4_ALOGLITPIN_FLAG
,MAX(DPP4_LINAGLIPTIN_FLAG) AS DPP4_LINAGLIPTIN_FLAG
,MAX(DPP4_LINA_SGLT2_EMPA_FLAG) AS DPP4_LINA_SGLT2_EMPA_FLAG /*updated July 2020 */
,MAX(DPP4_SAXAGLIPTIN_FLAG) AS DPP4_SAXAGLIPTIN_FLAG
,MAX(DPP4_SITAGLIPTIN_FLAG) AS DPP4_SITAGLIPTIN_FLAG
,MAX(DPP4S_TZDP_FLAG) AS DPP4S_TZDP_FLAG
,MAX(FIRST_GEN_SUL_FLAG) AS FIRST_GEN_SUL_FLAG
,MAX(GLIMEPERIDE_FLAG) AS GLIMEPERIDE_FLAG
,MAX(GLIM_TZD_PIOG_FLAG) AS GLIM_TZD_PIOG_FLAG  /*updated July 2020 */
,MAX(GLIM_TZD_ROSI_FLAG) AS GLIM_TZD_ROSI_FLAG  /*updated July 2020 */
,MAX(GLIPIZIDE_FLAG) AS GLIPIZIDE_FLAG
,MAX(GLP1_EXENATIDE_FLAG) AS GLP1_EXENATIDE_FLAG
,MAX(GLP1_LIRAGLUTIDE_FLAG) AS GLP1_LIRAGLUTIDE_FLAG
,MAX(GLYBURIDE_FLAG) AS GLYBURIDE_FLAG
,MAX(MEGLITANIDE_NATEGLINIDE_FLAG) AS MEGLITANIDE_NATEGLINIDE_FLAG
,MAX(METFORMIN_DPP4_ALOGLIPTIN_FLAG) AS METFORMIN_DPP4_ALOGLIPTIN_FLAG
,MAX(METFORMIN_DPP4_LINAGLIPTIN_FLAG) AS METFORMIN_DPP4_LINAGLIPTIN_FLAG
,MAX(METFORMIN_DPP4_SAXAGLIPTIN_FLAG) AS METFORMIN_DPP4_SAXAGLIPTIN_FLAG
,MAX(METFORMIN_DPP4_SITAGLIPTIN_FLAG) AS METFORMIN_DPP4_SITAGLIPTIN_FLAG
,MAX(METFORMIN_FLAG) AS METFORMIN_FLAG
,MAX(METFORMIN_GLIPIZIDE_FLAG) AS METFORMIN_GLIPIZIDE_FLAG
,MAX(METFORMIN_GLYBURIDE_FLAG) AS METFORMIN_GLYBURIDE_FLAG
,MAX(METFORMIN_MEGL_REPA_FLAG) AS METFORMIN_MEGL_REPA_FLAG  /*updated July 2020 */
,MAX(METFORMIN_REPAGLINIDE_FLAG) AS METFORMIN_REPAGLINIDE_FLAG
,MAX(METFORMIN_SGLT2_CANA_FLAG) AS METFORMIN_SGLT2_CANA_FLAG  /*updated July 2020 */
,MAX(METFORMIN_SGLT2_DAPA_FLAG) AS METFORMIN_SGLT2_DAPA_FLAG  /*updated July 2020 */
,MAX(METFORMIN_SGLT2_EMPA_FLAG) AS METFORMIN_SGLT2_EMPA_FLAG  /*updated July 2020 */
,MAX(METFORMIN_TZD_PIOGLITAZONE_FLAG) AS METFORMIN_TZD_PIOGLITAZONE_FLAG
,MAX(METFORMIN_TZD_ROSIGLITAZONE_FLAG) AS METFORMIN_TZD_ROSIGLITAZONE_FLAG
,MAX(SAXAGLIPTIN_DAPAGLIFLOZIN_FLAG) AS SAXAGLIPTIN_DAPAGLIFLOZIN_FLAG
,MAX(SGLT2_CANAGLIFLOZIN_FLAG) AS SGLT2_CANAGLIFLOZIN_FLAG
,MAX(SGLT2_DAPAGLIFLOZIN_FLAG) AS SGLT2_DAPAGLIFLOZIN_FLAG
,MAX(SGLT2_EMPAGLIFLOZIN_FLAG) AS SGLT2_EMPAGLIFLOZIN_FLAG
,MAX(SITAGLIPTIN_ERTUGLIFLOZIN_FLAG) AS SITAGLIPTIN_ERTUGLIFLOZIN_FLAG
,MAX(TZD_PIOG_DPP4_ALOG_FLAG) AS TZD_PIOG_DPP4_ALOG_FLAG  /* Updated July 2020 */
,MAX(TZD_PIOGLITAZONE_FLAG) AS TZD_PIOGLITAZONE_FLAG
,MAX(TZD_ROSIGLITAZONE_FLAG) AS TZD_ROSIGLITAZONE_FLAG
,MAX(TZD_TROGLITAZONE_FLAG) AS TZD_TROGLITAZONE_FLAG
,MAX(INSULIN_GLP1_LIRAGLUTIDE_FLAG) AS INSULIN_GLP1_LIRAGLUTIDE_FLAG  /* Updated July 2020 */
,MAX(INSULIN_GLP1_LIXISENATIDE_FLAG) AS INSULIN_GLP1_LIXISENATIDE_FLAG  /* Updated July 2020 */
,MAX(METFORMIN_ERTUGLIFLOZIN_FLAG) AS METFORMIN_ERTUGLIFLOZIN_FLAG  /* Updated July 2020 */
,MAX(METFORMIN_ERTUGLIFOZIN_FLAG) AS METFORMIN_ERTUGLIFOZIN_FLAG  /* Updated July 2020 */
,MAX(METFORMIN_FIRST_GEN_SUL_FLAG) AS METFORMIN_FIRST_GEN_SUL_FLAG  /* Updated July 2020 */
,MAX(ERTUGLIFLOZIN_FLAG) AS ERTUGLIFLOZIN_FLAG  /* Updated July 2020 */
,MAX(GLP1_DULAGLUTIDE_FLAG) AS GLP1_DULAGLUTIDE_FLAG  /* Updated July 2020 */
,MAX(GLP1_LIXISENATIDE_FLAG) AS GLP1_LIXISENATIDE_FLAG  /* Updated July 2020 */
,0 AS NO_MEDICATIONS_FLAG
FROM
(SELECT 
	DISTINCT 
	DEMO.PATID ,
	CASE WHEN MEDS_FLAG = 'ALL_INSULIN_FLAG' THEN 1 ELSE 0 END AS ALL_INSULIN_FLAG, 
	CASE WHEN MEDS_FLAG = 'ALPHA_GLUC_INHIB_FLAG' THEN 1 ELSE 0 END AS ALPHA_GLUC_INHIB_FLAG, 
	CASE WHEN MEDS_FLAG = 'DPP4_ALOGLITPIN_FLAG' THEN 1 ELSE 0 END AS DPP4_ALOGLITPIN_FLAG, 
	CASE WHEN MEDS_FLAG = 'DPP4_LINAGLIPTIN_FLAG' THEN 1 ELSE 0 END AS DPP4_LINAGLIPTIN_FLAG, 
	CASE WHEN MEDS_FLAG = 'DPP4_LINA_SGLT2_EMPA_FLAG' THEN 1 ELSE 0 END AS DPP4_LINA_SGLT2_EMPA_FLAG,  /*updated July 2020 */
	CASE WHEN MEDS_FLAG = 'DPP4_SAXAGLIPTIN_FLAG' THEN 1 ELSE 0 END AS DPP4_SAXAGLIPTIN_FLAG, 
	CASE WHEN MEDS_FLAG = 'DPP4_SITAGLIPTIN_FLAG' THEN 1 ELSE 0 END AS DPP4_SITAGLIPTIN_FLAG, 
	CASE WHEN MEDS_FLAG = 'DPP4S_TZDP_FLAG' THEN 1 ELSE 0 END AS DPP4S_TZDP_FLAG, 
	CASE WHEN MEDS_FLAG = 'FIRST_GEN_SUL_FLAG' THEN 1 ELSE 0 END AS FIRST_GEN_SUL_FLAG, 
	CASE WHEN MEDS_FLAG = 'GLIMEPERIDE_FLAG' THEN 1 ELSE 0 END AS GLIMEPERIDE_FLAG, 
	CASE WHEN MEDS_FLAG = 'GLIM_TZD_PIOG_FLAG' THEN 1 ELSE 0 END AS GLIM_TZD_PIOG_FLAG, /*updated July 2020 */
	CASE WHEN MEDS_FLAG = 'GLIM_TZD_ROSI_FLAG' THEN 1 ELSE 0 END AS GLIM_TZD_ROSI_FLAG, /*updated July 2020 */
	CASE WHEN MEDS_FLAG = 'GLIPIZIDE_FLAG' THEN 1 ELSE 0 END AS GLIPIZIDE_FLAG, 
	CASE WHEN MEDS_FLAG = 'GLP1_EXENATIDE_FLAG' THEN 1 ELSE 0 END AS GLP1_EXENATIDE_FLAG, 
	CASE WHEN MEDS_FLAG = 'GLP1_LIRAGLUTIDE_FLAG' THEN 1 ELSE 0 END AS GLP1_LIRAGLUTIDE_FLAG, 
	CASE WHEN MEDS_FLAG = 'GLYBURIDE_FLAG' THEN 1 ELSE 0 END AS GLYBURIDE_FLAG, 
	CASE WHEN MEDS_FLAG = 'MEGLITANIDE_NATEGLINIDE_FLAG' THEN 1 ELSE 0 END AS MEGLITANIDE_NATEGLINIDE_FLAG, 
	CASE WHEN MEDS_FLAG = 'METFORMIN_DPP4_ALOGLIPTIN_FLAG' THEN 1 ELSE 0 END AS METFORMIN_DPP4_ALOGLIPTIN_FLAG, 
	CASE WHEN MEDS_FLAG = 'METFORMIN_DPP4_LINAGLIPTIN_FLAG' THEN 1 ELSE 0 END AS METFORMIN_DPP4_LINAGLIPTIN_FLAG, 
	CASE WHEN MEDS_FLAG = 'METFORMIN_DPP4_SAXAGLIPTIN_FLAG' THEN 1 ELSE 0 END AS METFORMIN_DPP4_SAXAGLIPTIN_FLAG, 
	CASE WHEN MEDS_FLAG = 'METFORMIN_DPP4_SITAGLIPTIN_FLAG' THEN 1 ELSE 0 END AS METFORMIN_DPP4_SITAGLIPTIN_FLAG, 
	CASE WHEN MEDS_FLAG = 'METFORMIN_FLAG' THEN 1 ELSE 0 END AS METFORMIN_FLAG, 
	CASE WHEN MEDS_FLAG = 'METFORMIN_GLIPIZIDE_FLAG' THEN 1 ELSE 0 END AS METFORMIN_GLIPIZIDE_FLAG, 
	CASE WHEN MEDS_FLAG = 'METFORMIN_GLYBURIDE_FLAG' THEN 1 ELSE 0 END AS METFORMIN_GLYBURIDE_FLAG, 
	CASE WHEN MEDS_FLAG = 'METFORMIN_MEGL_REPA_FLAG' THEN 1 ELSE 0 END AS METFORMIN_MEGL_REPA_FLAG,  /*updated July 2020 */
	CASE WHEN MEDS_FLAG = 'METFORMIN_REPAGLINIDE_FLAG' THEN 1 ELSE 0 END AS METFORMIN_REPAGLINIDE_FLAG, 
	CASE WHEN MEDS_FLAG = 'METFORMIN_SGLT2_CANA_FLAG' THEN 1 ELSE 0 END AS METFORMIN_SGLT2_CANA_FLAG, /*updated July 2020 */
	CASE WHEN MEDS_FLAG = 'METFORMIN_SGLT2_DAPA_FLAG' THEN 1 ELSE 0 END AS METFORMIN_SGLT2_DAPA_FLAG, /*updated July 2020 */
	CASE WHEN MEDS_FLAG = 'METFORMIN_SGLT2_EMPA_FLAG' THEN 1 ELSE 0 END AS METFORMIN_SGLT2_EMPA_FLAG, /*updated July 2020 */
	CASE WHEN MEDS_FLAG = 'METFORMIN_TZD_PIOGLITAZONE_FLAG' THEN 1 ELSE 0 END AS METFORMIN_TZD_PIOGLITAZONE_FLAG, 
	CASE WHEN MEDS_FLAG = 'METFORMIN_TZD_ROSIGLITAZONE_FLAG' THEN 1 ELSE 0 END AS METFORMIN_TZD_ROSIGLITAZONE_FLAG, 
	CASE WHEN MEDS_FLAG = 'SAXAGLIPTIN_DAPAGLIFLOZIN_FLAG' THEN 1 ELSE 0 END AS SAXAGLIPTIN_DAPAGLIFLOZIN_FLAG, 
	CASE WHEN MEDS_FLAG = 'SGLT2_CANAGLIFLOZIN_FLAG' THEN 1 ELSE 0 END AS SGLT2_CANAGLIFLOZIN_FLAG, 
	CASE WHEN MEDS_FLAG = 'SGLT2_DAPAGLIFLOZIN_FLAG' THEN 1 ELSE 0 END AS SGLT2_DAPAGLIFLOZIN_FLAG, 
	CASE WHEN MEDS_FLAG = 'SGLT2_EMPAGLIFLOZIN_FLAG' THEN 1 ELSE 0 END AS SGLT2_EMPAGLIFLOZIN_FLAG, 
	CASE WHEN MEDS_FLAG = 'SITAGLIPTIN_ERTUGLIFLOZIN_FLAG' THEN 1 ELSE 0 END AS SITAGLIPTIN_ERTUGLIFLOZIN_FLAG, 
	CASE WHEN MEDS_FLAG = 'TZD_PIOG_DPP4_ALOG_FLAG' THEN 1 ELSE 0 END AS TZD_PIOG_DPP4_ALOG_FLAG,  /* Updated July 2020 */
	CASE WHEN MEDS_FLAG = 'TZD_PIOGLITAZONE_FLAG' THEN 1 ELSE 0 END AS TZD_PIOGLITAZONE_FLAG, 
	CASE WHEN MEDS_FLAG = 'TZD_ROSIGLITAZONE_FLAG' THEN 1 ELSE 0 END AS TZD_ROSIGLITAZONE_FLAG, 
	CASE WHEN MEDS_FLAG = 'TZD_TROGLITAZONE_FLAG' THEN 1 ELSE 0 END AS TZD_TROGLITAZONE_FLAG,
	CASE WHEN MEDS_FLAG = 'INSULIN_GLP1_LIXISENATIDE_FLAG' THEN 1 ELSE 0 END AS INSULIN_GLP1_LIXISENATIDE_FLAG, /* Updated July 2020 */
	CASE WHEN MEDS_FLAG = 'INSULIN_GLP1_LIRAGLUTIDE_FLAG' THEN 1 ELSE 0 END AS INSULIN_GLP1_LIRAGLUTIDE_FLAG, /* Updated July 2020 */
	CASE WHEN MEDS_FLAG = 'METFORMIN_ERTUGLIFOZIN_FLAG' THEN 1 ELSE 0 END AS METFORMIN_ERTUGLIFOZIN_FLAG, /* Updated July 2020 */
	CASE WHEN MEDS_FLAG = 'METFORMIN_ERTUGLIFLOZIN_FLAG' THEN 1 ELSE 0 END AS METFORMIN_ERTUGLIFLOZIN_FLAG, /* Updated July 2020 */
	CASE WHEN MEDS_FLAG = 'METFORMIN_FIRST_GEN_SUL_FLAG' THEN 1 ELSE 0 END AS METFORMIN_FIRST_GEN_SUL_FLAG,  /* Updated July 2020 */
	CASE WHEN MEDS_FLAG = 'ERTUGLIFLOZIN_FLAG' THEN 1 ELSE 0 END AS ERTUGLIFLOZIN_FLAG,  /* Updated July 2020 */
	CASE WHEN MEDS_FLAG = 'GLP1_LIXISENATIDE_FLAG' THEN 1 ELSE 0 END AS GLP1_LIXISENATIDE_FLAG, /* Updated July 2020 */
	CASE WHEN MEDS_FLAG = 'GLP1_DULAGLUTIDE_FLAG' THEN 1 ELSE 0 END AS GLP1_DULAGLUTIDE_FLAG /* Updated July 2020 */
	FROM 
		dmlocal.T1712_SELECTED_CASES DEMO
			JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
		 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
					JOIN infolder.RCRT2D_MED_rxnorm MED ON   MED.RXNORM_CUI = RX.RXNORM_CUI

WHERE 
(
    ENC.ENC_TYPE IN NOT ('IP','ED','EI')
)

 AND coalesce(RX_ORDER_DATE,RX_START_DATE )  BETWEEN (T1-730) AND (T1-1) 
	
	) X
	GROUP BY 1
;
quit;

proc sql;
drop table t1;
create table t1 as
SELECT 
	DISTINCT
	PATID
	, 0 AS ALL_INSULIN_FLAG
	, 0 AS ALPHA_GLUC_INHIB_FLAG
	, 0 AS DPP4_ALOGLITPIN_FLAG
	, 0 AS DPP4_LINAGLIPTIN_FLAG
	, 0 AS DPP4_LINA_SGLT2_EMPA_FLAG /*updated July 2020 */
	, 0 AS DPP4_SAXAGLIPTIN_FLAG
	, 0 AS DPP4_SITAGLIPTIN_FLAG
	, 0 AS DPP4S_TZDP_FLAG
	, 0 AS FIRST_GEN_SUL_FLAG
	, 0 AS GLIMEPERIDE_FLAG
	, 0 AS GLIM_TZD_PIOG_FLAG  /*updated July 2020 */
	, 0 AS GLIM_TZD_ROSI_FLAG  /*updated July 2020 */
	, 0 AS GLIPIZIDE_FLAG
	, 0 AS GLP1_EXENATIDE_FLAG
	, 0 AS GLP1_LIRAGLUTIDE_FLAG
	, 0 AS GLYBURIDE_FLAG
	, 0 AS MEGLITANIDE_NATEGLINIDE_FLAG
	, 0 AS METFORMIN_DPP4_ALOGLIPTIN_FLAG
	, 0 AS METFORMIN_DPP4_LINAGLIPTIN_FLAG
	, 0 AS METFORMIN_DPP4_SAXAGLIPTIN_FLAG
	, 0 AS METFORMIN_DPP4_SITAGLIPTIN_FLAG
	, 0 AS METFORMIN_FLAG
	, 0 AS METFORMIN_GLIPIZIDE_FLAG
	, 0 AS METFORMIN_GLYBURIDE_FLAG
	, 0 AS METFORMIN_MEGL_REPA_FLAG /*updated July 2020 */
	, 0 AS METFORMIN_REPAGLINIDE_FLAG
	, 0 AS METFORMIN_SGLT2_CANA_FLAG  /*updated July 2020 */
	, 0 AS METFORMIN_SGLT2_DAPA_FLAG  /*updated July 2020 */
	, 0 AS METFORMIN_SGLT2_EMPA_FLAG  /*updated July 2020 */
	, 0 AS METFORMIN_TZD_PIOGLITAZONE_FLAG
	, 0 AS METFORMIN_TZD_ROSIGLITAZONE_FLAG
	, 0 AS SAXAGLIPTIN_DAPAGLIFLOZIN_FLAG
	, 0 AS SGLT2_CANAGLIFLOZIN_FLAG
	, 0 AS SGLT2_DAPAGLIFLOZIN_FLAG
	, 0 AS SGLT2_EMPAGLIFLOZIN_FLAG
	, 0 AS SITAGLIPTIN_ERTUGLIFLOZIN_FLAG
	, 0 AS TZD_PIOG_DPP4_ALOG_FLAG  /* Updated July 2020 */
	, 0 AS TZD_PIOGLITAZONE_FLAG
	, 0 AS TZD_ROSIGLITAZONE_FLAG
	, 0 AS TZD_TROGLITAZONE_FLAG
	, 0 AS INSULIN_GLP1_LIRAGLUTIDE_FLAG  /* Updated July 2020 */
	, 0 AS INSULIN_GLP1_LIXISENATIDE_FLAG  /* Updated July 2020 */
	, 0 AS METFORMIN_FIRST_GEN_SUL_FLAG  /* Updated July 2020 */
	, 0 AS ERTUGLIFLOZIN_FLAG  /* Updated July 2020 */
	, 0 AS GLP1_DULAGLUTIDE_FLAG /* Updated July 2020 */
	, 0 AS GLP1_LIXISENATIDE_FLAG /* Updated July 2020 */
	, 0 AS METFORMIN_ERTUGLIFLOZIN_FLAG /* Updated July 2020 */
	, 0 AS METFORMIN_ERTUGLIFOZIN_FLAG /* Updated July 2020 */
	, 1 AS NO_MEDICATIONS_FLAG
	FROM dmlocal.T1712_SELECTED_CASES WHERE PATID NOT IN (SELECT PATID FROM dmtable.RCR_T2D_MEDS_GROUPING_FLAG);
quit;
data dmtable.RCR_T2D_MEDS_GROUPING_FLAG;
set dmtable.RCR_T2D_MEDS_GROUPING_FLAG t1;
run;

/*
Get the medication flags, 
then max and combine to flag
*/

proc options group=memory; run;
proc options option=(work utilloc) value; run;
proc options option=threads; run;

options fullstimer msglevel=i ;

proc sql;
create table dmtable.RCR_DEMO_MEDS_GROUPING_U as
SELECT 
	DISTINCT 
	DEMO.PATID 
	,'metformin' AS MEDS_FLAG
FROM 
		dmlocal.T1712_SELECTED_CASES DEMO
			JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
		 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
					JOIN infolder.RCRT2D_MED_rxnorm MED ON   MED.RXNORM_CUI = RX.RXNORM_CUI
WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
    AND coalesce(RX_ORDER_DATE,RX_START_DATE )  BETWEEN (T1-90) AND (T1+90)
	AND 
	/* 1. metformin */
	MEDS_FLAG IN('METFORMIN_FLAG',
	             'METFORMIN_DPP4_ALOGLIPTIN_FLAG',  /* Updated July 2020 */
	             'METFORMIN_DPP4_LINAGLIPTIN_FLAG', /* Updated July 2020 */
	             'METFORMIN_DPP4_SAXAGLIPTIN_FLAG', /* Updated July 2020 */
	             'METFORMIN_DPP4_SITAGLIPTIN_FLAG', /* Updated July 2020 */
	             'METFORMIN_ERTUGLIFLOZIN_FLAG',    /* Updated July 2020 */
	             'METFORMIN_ERTUGLIFOZIN_FLAG',     /* Updated July 2020 */
	             'METFORMIN_FIRST_GEN_SUL_FLAG',    /* Updated July 2020 */
	             'METFORMIN_GLIPIZIDE_FLAG',        /* Updated July 2020 */
	             'METFORMIN_GLYBURIDE_FLAG',        /* Updated July 2020 */   
	             'METFORMIN_MEGL_REPA_FLAG', /* Updated July 2020 */
	             'METFORMIN_SGLT2_CANA_FLAG', /* Updated July 2020 */
	             'METFORMIN_SGLT2_DAPA_FLAG', /* Updated July 2020 */
	             'METFORMIN_SGLT2_EMPA_FLAG', /* Updated July 2020 */
	             'METFORMIN_TZD_PIOGLITAZONE_FLAG',  /* Updated July 2020 */
	             'METFORMIN_TZD_ROSIGLITAZONE_FLAG') /* Updated July 2020 */
							
UNION
	
SELECT 
	DISTINCT 
	DEMO.PATID 
	,'anyinsulin' AS MEDS_FLAG
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
			JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
				JOIN infolder.RCRT2D_MED_rxnorm MED ON  MED.RXNORM_CUI = RX.RXNORM_CUI

WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
	AND coalesce(RX_ORDER_DATE,RX_START_DATE )  BETWEEN (T1-90) AND (T1+90)
	AND MEDS_FLAG IN ('ALL_INSULIN_FLAG',
	                  'INSULIN_GLP1_LIRAGLUTIDE_FLAG',  /* Updated July 2020 */
	                  'INSULIN_GLP1_LIXISENATIDE_FLAG')  /* Updated July 2020 */
	/* 2. anyinsulin*/
	
UNION 
	
SELECT 
	DISTINCT 
	DEMO.PATID 
	,'sulgen2' AS MEDS_FLAG
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
	 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
				JOIN infolder.RCRT2D_MED_rxnorm MED ON   MED.RXNORM_CUI = RX.RXNORM_CUI
WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
	AND coalesce(RX_ORDER_DATE,RX_START_DATE )  BETWEEN (T1-90) AND (T1+90)
	AND MEDS_FLAG IN ('GLIPIZIDE_FLAG',
					          'GLYBURIDE_FLAG',
					          'GLIMEPERIDE_FLAG',
					          'FIRST_GEN_SUL_FLAG',  /* Updated July 2020 */
					          'GLIM_TZD_PIOG_FLAG',  /* Updated July 2020 */
					          'GLIM_TZD_ROSI_FLAG',  /* Updated July 2020 */
					          'METFORMIN_FIRST_GEN_SUL_FLAG',  /* Updated July 2020 */
					          'METFORMIN_GLIPIZIDE_FLAG',  /* Updated July 2020 */
					          'METFORMIN_GLYBURIDE_FLAG')  /* Updated July 2020 */
	/* 3. sulgen2 */

UNION 

SELECT 
	DISTINCT 
	DEMO.PATID 
	,'metglybur' AS MEDS_FLAG
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING rx on demo.patid=rx.patid
	 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID				
				JOIN infolder.RCRT2D_MED_RXNORM MED ON MED.RXNORM_CUI = RX.RXNORM_CUI


WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
	AND coalesce(RX_ORDER_DATE,RX_START_DATE )  BETWEEN (T1-90) AND (T1+90)
	AND MEDS_FLAG IN ('METFORMIN_GLYBURIDE_FLAG') 

UNION

SELECT 
	DISTINCT 
	DEMO.PATID 
	,'metglipi' AS MEDS_FLAG
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
	 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID				
				JOIN infolder.RCRT2D_MED_RXNORM MED ON MED.RXNORM_CUI = RX.RXNORM_CUI
		

WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
	AND coalesce(RX_ORDER_DATE,RX_START_DATE )  BETWEEN (T1-90) AND (T1+90)
	AND MEDS_FLAG IN ('METFORMIN_GLIPIZIDE_FLAG') 
					
UNION 
	
SELECT 
	DISTINCT 
	DEMO.PATID 
	,'TZD' AS MEDS_FLAG
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
	 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
				JOIN infolder.RCRT2D_MED_rxnorm MED ON   MED.RXNORM_CUI = RX.RXNORM_CUI
WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
    AND coalesce(RX_ORDER_DATE,RX_START_DATE )  BETWEEN (T1-90) AND (T1+90)
	AND MEDS_FLAG IN	('GLIM_TZD_PIOG_FLAG',  /* Updated July 2020 */
	                   'GLIM_TZD_ROSI_FLAG',  /* Updated July 2020 */
					           'METFORMIN_TZD_PIOGLITAZONE_FLAG',
					           'METFORMIN_TZD_ROSIGLITAZONE_FLAG',
					           'TZD_PIOG_DPP4_ALOG_FLAG', /* Updated July 2020 */
					           'TZD_PIOGLITAZONE_FLAG',
					           'TZD_ROSIGLITAZONE_FLAG',
					           'TZD_TROGLITAZONE_FLAG')		 

	/* 4. TZD */	
	
UNION 
	
SELECT 
	DISTINCT 
	DEMO.PATID 
	,'DPP4' AS MEDS_FLAG
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
		 	JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
				JOIN infolder.RCRT2D_MED_rxnorm MED ON   MED.RXNORM_CUI = RX.RXNORM_CUI
WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
	AND coalesce(RX_ORDER_DATE,RX_START_DATE )  BETWEEN (T1-90) AND (T1+90)
	AND MEDS_FLAG IN	('DPP4_LINAGLIPTIN_FLAG',
                     'DPP4_ALOGLITPIN_FLAG',
                     'METFORMIN_DPP4_ALOGLIPTIN_FLAG',
                     'METFORMIN_DPP4_LINAGLIPTIN_FLAG',
       					     'METFORMIN_DPP4_SAXAGLIPTIN_FLAG',
                     'METFORMIN_DPP4_SITAGLIPTIN_FLAG',
                     'TZD_PIOG_DPP4_ALOG_FLAG',  /* Updated July 2020 */
                     'DPP4_LINA_SGLT2_EMPA_FLAG',  /* Updated July 2020 */
                     'DPP4_SAXAGLIPTIN_FLAG',
                     'DPP4_SITAGLIPTIN_FLAG', 
                     'SAXAGLIPTIN_DAPAGLIFLOZIN_FLAG',  /* Updated July 2020 */
                     'SITAGLIPTIN_ERTUGLIFLOZIN_FLAG')   /* Updated July 2020 */

 	/* 5. DPP4 */
						
UNION 

SELECT 
	DISTINCT 
	DEMO.PATID 
	,'GLP1' AS MEDS_FLAG
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
	 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
				JOIN infolder.RCRT2D_MED_rxnorm MED ON   MED.RXNORM_CUI = RX.RXNORM_CUI
WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
	AND coalesce(RX_ORDER_DATE,RX_START_DATE )  BETWEEN (T1-90) AND (T1+90)
	AND MEDS_FLAG IN ('GLP1_EXENATIDE_FLAG',   /* Updated July 2020 */
	                  'GLP1_DULAGLUTIDE_FLAG',  /* Updated July 2020 */
	                  'GLP1_LIXISENATIDE_FLAG',  
	                  'INSULIN_GLP1_LIRAGLUTIDE_FLAG',  /* Updated July 2020 */
	                  'INSULIN_GLP1_LIXISENATIDE_FLAG',  /* Updated July 2020 */
	                  'GLP1_LIRAGLUTIDE_FLAG') 
	/* 6. GLP1 */
	
UNION 

SELECT 
	DISTINCT 
	DEMO.PATID 
	,'SGLT2' AS MEDS_FLAG
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
	 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
				JOIN infolder.RCRT2D_MED_rxnorm MED ON   MED.RXNORM_CUI = RX.RXNORM_CUI

WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
	AND coalesce(RX_ORDER_DATE,RX_START_DATE )  BETWEEN (T1-90) AND (T1+90)
	AND MEDS_FLAG IN ('DPP4_LINA_SGLT2_EMPA_FLAG',  /* Updated July 2020 */
					          'METFORMIN_SGLT2_CANA_FLAG',  /* Updated July 2020 */
					          'METFORMIN_SGLT2_DAPA_FLAG',  /* Updated July 2020 */
					          'METFORMIN_SGLT2_EMPA_FLAG',  /* Updated July 2020 */
					          'SGLT2_CANAGLIFLOZIN_FLAG',
					          'SGLT2_DAPAGLIFLOZIN_FLAG',
					          'SGLT2_EMPAGLIFLOZIN_FLAG',
					          'ERTUGLIFLOZIN_FLAG',  /* Updated July 2020 */
					          'METFORMIN_ERTUGLIFLOZIN_FLAG',  /* Updated July 2020 */ 
					          'METFORMIN_ERTUGLIFOZIN_FLAG',  /* Updated July 2020 */
					          'SAXAGLIPTIN_DAPAGLIFLOZIN_FLAG',  /* Updated July 2020 */
					          'SITAGLIPTIN_ERTUGLIFLOZIN_FLAG')  /* Updated July 2020 */

	/* 7. SGLT2 */
	
UNION 

SELECT 
	DISTINCT 
	DEMO.PATID 
	,'other' AS MEDS_FLAG
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
	 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
				JOIN infolder.RCRT2D_MED_rxnorm MED ON   MED.RXNORM_CUI = RX.RXNORM_CUI
WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
	AND coalesce(RX_ORDER_DATE,RX_START_DATE )  BETWEEN (T1-90) AND (T1+90)
	AND MEDS_FLAG IN ('ALPHA_GLUC_INHIB_FLAG',
                    'MEGLITANIDE_NATEGLINIDE_FLAG',
			              'MEGLITANIDE_REPAGLINIDE_FLAG',
			              'METFORMIN_REPAGLINIDE_FLAG')		
	/* 8. other */	
	
;
quit;

proc sql;
drop table t1;
create table t1 as
select distinct PATID, 'no_med_flag' AS MEDS_FLAG
FROM dmlocal.T1712_SELECTED_CASES WHERE PATID NOT IN (SELECT patid FROM dmtable.RCR_DEMO_MEDS_GROUPING_U ); 
quit;

data dmtable.RCR_DEMO_MEDS_GROUPING_U;
set t1 dmtable.RCR_DEMO_MEDS_GROUPING_U ;
run;

/*
GET all the medication flags to different rows named after the med_flag
*/
proc sql;
CREATE TABLE dmtable.RCR_DEMO_MEDS_GROUPING_U_REV AS
SELECT PATID
	, MAX(ANYINSULIN) as ANYINSULIN
	, MAX(DPP4) as DPP4
	, MAX(GLP1) as GLP1
	, MAX(TZD) as TZD
	, MAX(METFORMIN) as METFORMIN
	, MAX(NO_MED_FLAG) as NO_MED_FLAG
	, MAX(OTHER) as OTHER
	, MAX(SULGEN2) as SULGEN2
	, MAX(SGLT2) as SGLT2
	, MAX(METGLYBUR) as METGLYBUR 
	, MAX(METGLIPI) as METGLIPI 
FROM
(select PATID
, CASE WHEN MEDS_FLAG = 'anyinsulin' THEN 1 ELSE 0 END AS ANYINSULIN
, CASE WHEN MEDS_FLAG = 'DPP4' THEN 1 ELSE 0 END AS DPP4
, CASE WHEN MEDS_FLAG = 'GLP1' THEN 1 ELSE 0 END AS GLP1
, CASE WHEN MEDS_FLAG = 'TZD' THEN 1 ELSE 0 END AS TZD
, CASE WHEN MEDS_FLAG = 'metformin' THEN 1 ELSE 0 END AS metformin
, CASE WHEN MEDS_FLAG = 'no_med_flag' THEN 1 ELSE 0 END AS no_med_flag
, CASE WHEN MEDS_FLAG = 'other' THEN 1 ELSE 0 END AS other
, CASE WHEN MEDS_FLAG = 'sulgen2' THEN 1 ELSE 0 END AS sulgen2
, CASE WHEN MEDS_FLAG = 'SGLT2' THEN 1 ELSE 0 END AS SGLT2
, CASE WHEN MEDS_FLAG = 'metglybur' THEN 1 ELSE 0 END AS metglybur 
, CASE WHEN MEDS_FLAG = 'metglipi' THEN 1 ELSE 0 END AS metglipi 

from dmtable.RCR_DEMO_MEDS_GROUPING_U) U
GROUP BY 1
;
quit;

/*
re-orgnize all the medication flags to PI's med_flag
*/
proc sql;
CREATE TABLE dmtable.RCR_DEMO_MEDS_GROUPING_U_REV2 AS
select PATID
,CASE WHEN (METFORMIN = 1) AND (ANYINSULIN+DPP4+GLP1+TZD+OTHER+SULGEN2+SGLT2=0) THEN 1 ELSE 0 END AS  METFORMIN_FLAG
,CASE WHEN (ANYINSULIN = 1) AND (DPP4+GLP1+TZD+METFORMIN+OTHER+SULGEN2+SGLT2=0) THEN 1 ELSE 0 END AS  ANYINSULIN_FLAG
,CASE WHEN (SULGEN2 = 1) AND (ANYINSULIN+DPP4+GLP1+TZD+METFORMIN+OTHER+SGLT2=0) THEN 1 ELSE 0 END AS  SULGEN2_FLAG
,CASE WHEN (TZD = 1) AND (ANYINSULIN+DPP4+GLP1+METFORMIN+OTHER+SULGEN2+SGLT2=0) THEN 1 ELSE 0 END AS  TZD_FLAG
,CASE WHEN (DPP4 = 1) AND (ANYINSULIN+GLP1+TZD+METFORMIN+OTHER+SULGEN2+SGLT2=0) THEN 1 ELSE 0 END AS  DPP4_FLAG
,CASE WHEN (GLP1 = 1) AND (ANYINSULIN+DPP4+TZD+METFORMIN+OTHER+SULGEN2+SGLT2=0) THEN 1 ELSE 0 END AS  GLP1_FLAG
,CASE WHEN (SGLT2 = 1) AND (ANYINSULIN+DPP4+GLP1+TZD+METFORMIN+OTHER+SULGEN2=0) THEN 1 ELSE 0 END AS  SGLT2_FLAG

,CASE when (METGLYBUR = 1) AND (ANYINSULIN+DPP4+GLP1+TZD+OTHER+SULGEN2+SGLT2+METFORMIN+METGLIPI=0) THEN 1 ELSE 0 END AS  METGLYBUR_FLAG 
,CASE when (METGLIPI = 1) AND (ANYINSULIN+DPP4+GLP1+TZD+OTHER+SULGEN2+SGLT2+METFORMIN+METGLYBUR=0) THEN 1 ELSE 0 END AS  METGLIPI_FLAG 

,CASE WHEN (METFORMIN+SULGEN2 = 2) OR (METGLYBUR = 1) OR (METGLIPI = 1) THEN 1 ELSE 0 END AS  METFORMIN_SULGEN2_FLAG 
,CASE WHEN (METFORMIN+DPP4 = 2)  THEN 1 ELSE 0 END AS  METFORMIN_DPP4_FLAG
,CASE WHEN (METFORMIN+ANYINSULIN = 2) THEN 1 ELSE 0 END AS  METFORMIN_ANYINSULIN_FLAG
,CASE WHEN (METFORMIN+ANYINSULIN+DPP4+GLP1+TZD+OTHER+SULGEN2+SGLT2 =3) OR (METFORMIN+ANYINSULIN+DPP4+GLP1+TZD+OTHER+SULGEN2+SGLT2 =4) THEN 1 ELSE 0 END 
		AS  MULT_MED_COMBO_FLAG
,CASE WHEN GLP1 + METFORMIN= 2 THEN 1 ELSE 0 END AS GLP1_METFORMIN_FLAG
,CASE WHEN SULGEN2 + GLP1 =2 THEN 1 ELSE 0 END AS SULGEN2_GLP1_FLAG
,CASE WHEN SULGEN2 + ANYINSULIN =2 THEN 1 ELSE 0 END AS SULGEN2_ANYINSULIN_FLAG
,OTHER AS OTHER_FLAG
,NO_MED_FLAG
FROM dmtable.RCR_DEMO_MEDS_GROUPING_U_REV;
quit;

/*
Put all different med column into meds_flags 
*/
proc sql;
create table  dmtable.RCR_DEMO_MEDS_GROUPING_U_REV3 as
SELECT PATID,
CASE WHEN METFORMIN_FLAG=1 THEN 'METFORMIN_FLAG'
    WHEN ANYINSULIN_FLAG=1 THEN 'ANYINSULIN_FLAG'
    WHEN SULGEN2_FLAG=1 THEN 'SULGEN2_FLAG'
    WHEN TZD_FLAG=1 THEN 'TZD_FLAG'
    WHEN DPP4_FLAG=1 THEN 'DPP4_FLAG'
    WHEN GLP1_FLAG=1 THEN 'GLP1_FLAG'
    WHEN SGLT2_FLAG=1 THEN 'SGLT2_FLAG'
    WHEN METFORMIN_SULGEN2_FLAG=1 THEN 'METFORMIN_SULGEN2_FLAG'
    WHEN METFORMIN_DPP4_FLAG=1 THEN 'METFORMIN_DPP4_FLAG'
    WHEN METFORMIN_ANYINSULIN_FLAG=1 THEN 'METFORMIN_ANYINSULIN_FLAG'
    WHEN MULT_MED_COMBO_FLAG=1 THEN 'MULT_MED_COMBO_FLAG'
    WHEN GLP1_METFORMIN_FLAG=1 THEN 'GLP1_METFORMIN_FLAG'
    WHEN SULGEN2_GLP1_FLAG=1 THEN 'SULGEN2_GLP1_FLAG'
	WHEN SULGEN2_ANYINSULIN_FLAG=1 THEN 'SULGEN2_ANYINSULIN_FLAG'
    WHEN OTHER_FLAG=1 THEN 'OTHER_FLAG'
    WHEN NO_MED_FLAG=1 THEN 'NO_MED_FLAG'
    END AS MEDS_FLAG
FROM dmtable.RCR_DEMO_MEDS_GROUPING_U_REV2
;
quit;

proc sql;
UPDATE dmtable.RCR_DEMO_MEDS_GROUPING_U_REV3
SET MEDS_FLAG= 'OTHER_COMBO_FLAG'
WHERE MEDS_FLAG IS NULL;
quit;

/*
get the 12-month-drug flags
THEN max and combine similiar to the flag
*/
proc sql;
CREATE TABLE dmtable.RCR_DEMO_MEDS_GROUPING_12 AS
SELECT 
	DISTINCT 
	DEMO.PATID 
	,'metformin' AS MEDS_FLAG_12
FROM 
		dmlocal.T1712_SELECTED_CASES DEMO
			JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
		 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
					JOIN infolder.RCRT2D_MED_rxnorm MED ON   MED.RXNORM_CUI = RX.RXNORM_CUI
WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
    AND coalesce(RX_ORDER_DATE,RX_START_DATE )  
BETWEEN 
case
when 
intnx('month',T1+1,0,"s")<> intnx('month',T1+1,0,"e")
then
intnx('month',T1+1,0,"s")
else
intnx('month',mdy(month(intnx('month',T1+1,0,"s")),day(intnx('month',T1+1,0,"s")),year(intnx('month',T1+1,0,"s"))),0,"e")
end 
AND 
case
when 
intnx('month',T1,0,"s")<> intnx('month',T1,0,"e")
then
intnx('month',T1,12,"s")
else
intnx('month',mdy(month(intnx('month',T1,12,"s")),day(intnx('month',T1,12,"s")),year(intnx('month',T1,12,"s"))),0,"e")
end 
	AND 
	/* 1. metformin */
	MEDS_FLAG IN ('METFORMIN_FLAG',
	              'METFORMIN_DPP4_ALOGLIPTIN_FLAG',  /* Updated July 2020 */
	              'METFORMIN_DPP4_LINAGLIPTIN_FLAG', /* Updated July 2020 */
	              'METFORMIN_DPP4_SAXAGLIPTIN_FLAG', /* Updated July 2020 */
	              'METFORMIN_DPP4_SITAGLIPTIN_FLAG', /* Updated July 2020 */
	              'METFORMIN_ERTUGLIFLOZIN_FLAG',    /* Updated July 2020 */
	              'METFORMIN_ERTUGLIFOZIN_FLAG',     /* Updated July 2020 */
	              'METFORMIN_FIRST_GEN_SUL_FLAG',    /* Updated July 2020 */
	              'METFORMIN_GLIPIZIDE_FLAG',        /* Updated July 2020 */
	              'METFORMIN_GLYBURIDE_FLAG',        /* Updated July 2020 */   
	              'METFORMIN_MEGL_REPA_FLAG', /* Updated July 2020 */
	              'METFORMIN_SGLT2_CANA_FLAG', /* Updated July 2020 */
	              'METFORMIN_SGLT2_DAPA_FLAG', /* Updated July 2020 */
	              'METFORMIN_SGLT2_EMPA_FLAG', /* Updated July 2020 */
	              'METFORMIN_TZD_PIOGLITAZONE_FLAG',  /* Updated July 2020 */
	              'METFORMIN_TZD_ROSIGLITAZONE_FLAG') /* Updated July 2020 */
							
UNION
	
SELECT 
	DISTINCT 
	DEMO.PATID 
	,'anyinsulin' AS MEDS_FLAG_12
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
			JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
				JOIN infolder.RCRT2D_MED_rxnorm MED ON   MED.RXNORM_CUI = RX.RXNORM_CUI

WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
	AND coalesce(RX_ORDER_DATE,RX_START_DATE )  
	
BETWEEN 
case
when 
intnx('month',T1+1,0,"s")<> intnx('month',T1+1,0,"e")
then
intnx('month',T1+1,0,"s")
else
intnx('month',mdy(month(intnx('month',T1+1,0,"s")),day(intnx('month',T1+1,0,"s")),year(intnx('month',T1+1,0,"s"))),0,"e")
end 
AND 
case
when 
intnx('month',T1,0,"s")<> intnx('month',T1,0,"e")
then
intnx('month',T1,12,"s")
else
intnx('month',mdy(month(intnx('month',T1,12,"s")),day(intnx('month',T1,12,"s")),year(intnx('month',T1,12,"s"))),0,"e")
end 
	AND MEDS_FLAG IN ('ALL_INSULIN_FLAG',
	                  'INSULIN_GLP1_LIRAGLUTIDE_FLAG',  /* Updated July 2020 */
	                  'INSULIN_GLP1_LIXISENATIDE_FLAG')  /* Updated July 2020 */
	/* 2. anyinsulin */
	
UNION 
	
SELECT 
	DISTINCT 
	DEMO.PATID 
	,'sulgen2' AS MEDS_FLAG_12
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
	 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
				JOIN infolder.RCRT2D_MED_rxnorm MED ON  MED.RXNORM_CUI = RX.RXNORM_CUI

WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
	AND coalesce(RX_ORDER_DATE,RX_START_DATE )  
BETWEEN 
case
when 
intnx('month',T1+1,0,"s")<> intnx('month',T1+1,0,"e")
then
intnx('month',T1+1,0,"s")
else
intnx('month',mdy(month(intnx('month',T1+1,0,"s")),day(intnx('month',T1+1,0,"s")),year(intnx('month',T1+1,0,"s"))),0,"e")
end 
AND 
case
when 
intnx('month',T1,0,"s")<> intnx('month',T1,0,"e")
then
intnx('month',T1,12,"s")
else
intnx('month',mdy(month(intnx('month',T1,12,"s")),day(intnx('month',T1,12,"s")),year(intnx('month',T1,12,"s"))),0,"e")
end 
	AND MEDS_FLAG IN (
					'GLIPIZIDE_FLAG',
					'GLYBURIDE_FLAG',
					'GLIMEPERIDE_FLAG',
					'FIRST_GEN_SUL_FLAG',  /* Updated July 2020 */
					'GLIM_TZD_PIOG_FLAG',  /* Updated July 2020 */
					'GLIM_TZD_ROSI_FLAG',  /* Updated July 2020 */
					'METFORMIN_FIRST_GEN_SUL_FLAG',  /* Updated July 2020 */
					'METFORMIN_GLIPIZIDE_FLAG',  /* Updated July 2020 */
					'METFORMIN_GLYBURIDE_FLAG')  /* Updated July 2020 */

    /* 3. sulgen2 */

UNION 

SELECT 
	DISTINCT 
	DEMO.PATID 
	,'metglybur' AS MEDS_FLAG_12
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
	 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID				
				JOIN infolder.RCRT2D_MED_RXNORM MED ON MED.RXNORM_CUI = RX.RXNORM_CUI


WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
	AND coalesce(RX_ORDER_DATE,RX_START_DATE )  
BETWEEN 
case
when 
intnx('month',T1+1,0,"s")<> intnx('month',T1+1,0,"e")
then
intnx('month',T1+1,0,"s")
else
intnx('month',mdy(month(intnx('month',T1+1,0,"s")),day(intnx('month',T1+1,0,"s")),year(intnx('month',T1+1,0,"s"))),0,"e")
end 
AND 
case
when 
intnx('month',T1,0,"s")<> intnx('month',T1,0,"e")
then
intnx('month',T1,12,"s")
else
intnx('month',mdy(month(intnx('month',T1,12,"s")),day(intnx('month',T1,12,"s")),year(intnx('month',T1,12,"s"))),0,"e")
end 
	AND MEDS_FLAG IN ('METFORMIN_GLYBURIDE_FLAG') 

UNION

SELECT 
	DISTINCT 
	DEMO.PATID 
	,'metglipi' AS MEDS_FLAG_12
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
	 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID				
				JOIN infolder.RCRT2D_MED_RXNORM MED ON MED.RXNORM_CUI = RX.RXNORM_CUI


WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
AND coalesce(RX_ORDER_DATE,RX_START_DATE )  
BETWEEN 
case
when 
intnx('month',T1+1,0,"s")<> intnx('month',T1+1,0,"e")
then
intnx('month',T1+1,0,"s")
else
intnx('month',mdy(month(intnx('month',T1+1,0,"s")),day(intnx('month',T1+1,0,"s")),year(intnx('month',T1+1,0,"s"))),0,"e")
end 
AND 
case
when 
intnx('month',T1,0,"s")<> intnx('month',T1,0,"e")
then
intnx('month',T1,12,"s")
else
intnx('month',mdy(month(intnx('month',T1,12,"s")),day(intnx('month',T1,12,"s")),year(intnx('month',T1,12,"s"))),0,"e")
end 
	AND MEDS_FLAG IN ('METFORMIN_GLIPIZIDE_FLAG') 


					
UNION 
	
SELECT 
	DISTINCT 
	DEMO.PATID 
	,'TZD' AS MEDS_FLAG_12
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
				JOIN infolder.RCRT2D_MED_rxnorm MED ON   MED.RXNORM_CUI = RX.RXNORM_CUI
WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
    AND coalesce(RX_ORDER_DATE,RX_START_DATE )  
BETWEEN 
case
when 
intnx('month',T1+1,0,"s")<> intnx('month',T1+1,0,"e")
then
intnx('month',T1+1,0,"s")
else
intnx('month',mdy(month(intnx('month',T1+1,0,"s")),day(intnx('month',T1+1,0,"s")),year(intnx('month',T1+1,0,"s"))),0,"e")
end 
AND 
case
when 
intnx('month',T1,0,"s")<> intnx('month',T1,0,"e")
then
intnx('month',T1,12,"s")
else
intnx('month',mdy(month(intnx('month',T1,12,"s")),day(intnx('month',T1,12,"s")),year(intnx('month',T1,12,"s"))),0,"e")
end 
	AND MEDS_FLAG IN	('GLIM_TZD_PIOG_FLAG',  /* Updated July 2020 */
	                   'GLIM_TZD_ROSI_FLAG',  /* Updated July 2020 */
					           'METFORMIN_TZD_PIOGLITAZONE_FLAG',
					           'METFORMIN_TZD_ROSIGLITAZONE_FLAG',
					           'TZD_PIOG_DPP4_ALOG_FLAG', /* Updated July 2020 */
					           'TZD_PIOGLITAZONE_FLAG',
					           'TZD_ROSIGLITAZONE_FLAG',
					           'TZD_TROGLITAZONE_FLAG')		 
	/* 4. TZD */	
	
UNION 
	
SELECT 
	DISTINCT 
	DEMO.PATID 
	,'DPP4' AS MEDS_FLAG_12
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
		 	JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
				JOIN infolder.RCRT2D_MED_rxnorm MED ON   MED.RXNORM_CUI = RX.RXNORM_CUI

WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
	AND coalesce(RX_ORDER_DATE,RX_START_DATE )  
BETWEEN 
case
when 
intnx('month',T1+1,0,"s")<> intnx('month',T1+1,0,"e")
then
intnx('month',T1+1,0,"s")
else
intnx('month',mdy(month(intnx('month',T1+1,0,"s")),day(intnx('month',T1+1,0,"s")),year(intnx('month',T1+1,0,"s"))),0,"e")
end 
AND 
case
when 
intnx('month',T1,0,"s")<> intnx('month',T1,0,"e")
then
intnx('month',T1,12,"s")
else
intnx('month',mdy(month(intnx('month',T1,12,"s")),day(intnx('month',T1,12,"s")),year(intnx('month',T1,12,"s"))),0,"e")
end 
	AND MEDS_FLAG IN	('DPP4_LINAGLIPTIN_FLAG',
                     'DPP4_ALOGLITPIN_FLAG', 
                     'METFORMIN_DPP4_ALOGLIPTIN_FLAG',
                     'METFORMIN_DPP4_LINAGLIPTIN_FLAG',
        				     'METFORMIN_DPP4_SAXAGLIPTIN_FLAG',
                     'METFORMIN_DPP4_SITAGLIPTIN_FLAG',
                     'TZD_PIOG_DPP4_ALOG_FLAG', /*updated July 2020 */
                     'DPP4_LINA_SGLT2_EMPA_FLAG', /*updated July 2020 */
                     'DPP4_SAXAGLIPTIN_FLAG',
                     'DPP4_SITAGLIPTIN_FLAG',
                     'SAXAGLIPTIN_DAPAGLIFLOZIN_FLAG',  /* Updated July 2020 */
                     'SITAGLIPTIN_ERTUGLIFLOZIN_FLAG')   /* Updated July 2020 */
 	/* 5. DPP4 */
						
UNION 

SELECT 
	DISTINCT 
	DEMO.PATID 
	,'GLP1' AS MEDS_FLAG_12
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
	 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
				JOIN infolder.RCRT2D_MED_rxnorm MED ON   MED.RXNORM_CUI = RX.RXNORM_CUI
WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
	AND coalesce(RX_ORDER_DATE,RX_START_DATE )  
BETWEEN 
case
when 
intnx('month',T1+1,0,"s")<> intnx('month',T1+1,0,"e")
then
intnx('month',T1+1,0,"s")
else
intnx('month',mdy(month(intnx('month',T1+1,0,"s")),day(intnx('month',T1+1,0,"s")),year(intnx('month',T1+1,0,"s"))),0,"e")
end 
AND 
case
when 
intnx('month',T1,0,"s")<> intnx('month',T1,0,"e")
then
intnx('month',T1,12,"s")
else
intnx('month',mdy(month(intnx('month',T1,12,"s")),day(intnx('month',T1,12,"s")),year(intnx('month',T1,12,"s"))),0,"e")
end 
	AND MEDS_FLAG IN ('GLP1_EXENATIDE_FLAG',   /* Updated July 2020 */
	                  'GLP1_DULAGLUTIDE_FLAG',  /* Updated July 2020 */
	                  'GLP1_LIXISENATIDE_FLAG',  
	                  'INSULIN_GLP1_LIRAGLUTIDE_FLAG',  /* Updated July 2020 */
	                  'INSULIN_GLP1_LIXISENATIDE_FLAG',  /* Updated July 2020 */
	                  'GLP1_LIRAGLUTIDE_FLAG') 
	/* 6. GLP1 */
	
UNION 

SELECT 
	DISTINCT 
	DEMO.PATID 
	,'SGLT2' AS MEDS_FLAG_12
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
	 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
				JOIN infolder.RCRT2D_MED_rxnorm MED ON   MED.RXNORM_CUI = RX.RXNORM_CUI
WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
	AND coalesce(RX_ORDER_DATE,RX_START_DATE )  
BETWEEN 
case
when 
intnx('month',T1+1,0,"s")<> intnx('month',T1+1,0,"e")
then
intnx('month',T1+1,0,"s")
else
intnx('month',mdy(month(intnx('month',T1+1,0,"s")),day(intnx('month',T1+1,0,"s")),year(intnx('month',T1+1,0,"s"))),0,"e")
end 
AND 
case
when 
intnx('month',T1,0,"s")<> intnx('month',T1,0,"e")
then
intnx('month',T1,12,"s")
else
intnx('month',mdy(month(intnx('month',T1,12,"s")),day(intnx('month',T1,12,"s")),year(intnx('month',T1,12,"s"))),0,"e")
end 
	AND MEDS_FLAG IN ('DPP4_LINA_SGLT2_EMPA_FLAG',  /* Updated July 2020 */
					            'METFORMIN_SGLT2_CANA_FLAG',  /* Updated July 2020 */
					            'METFORMIN_SGLT2_DAPA_FLAG',  /* Updated July 2020 */
					            'METFORMIN_SGLT2_EMPA_FLAG',  /* Updated July 2020 */
					            'SGLT2_CANAGLIFLOZIN_FLAG',
					            'SGLT2_DAPAGLIFLOZIN_FLAG',
					            'SGLT2_EMPAGLIFLOZIN_FLAG',
					            'ERTUGLIFLOZIN_FLAG',  /* Updated July 2020 */
					            'METFORMIN_ERTUGLIFLOZIN_FLAG',  /* Updated July 2020 */ 
					            'METFORMIN_ERTUGLIFOZIN_FLAG',  /* Updated July 2020 */
					            'SAXAGLIPTIN_DAPAGLIFLOZIN_FLAG',  /* Updated July 2020 */
					            'SITAGLIPTIN_ERTUGLIFLOZIN_FLAG')  /* Updated July 2020 */
	/* 7. SGLT2 */
	
UNION 

SELECT 
	DISTINCT 
	DEMO.PATID 
	,'other' AS MEDS_FLAG_12
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
	 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
				JOIN infolder.RCRT2D_MED_rxnorm MED ON   MED.RXNORM_CUI = RX.RXNORM_CUI
WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
	AND coalesce(RX_ORDER_DATE,RX_START_DATE )  
BETWEEN 
case
when 
intnx('month',T1+1,0,"s")<> intnx('month',T1+1,0,"e")
then
intnx('month',T1+1,0,"s")
else
intnx('month',mdy(month(intnx('month',T1+1,0,"s")),day(intnx('month',T1+1,0,"s")),year(intnx('month',T1+1,0,"s"))),0,"e")
end 
AND 
case
when 
intnx('month',T1,0,"s")<> intnx('month',T1,0,"e")
then
intnx('month',T1,12,"s")
else
intnx('month',mdy(month(intnx('month',T1,12,"s")),day(intnx('month',T1,12,"s")),year(intnx('month',T1,12,"s"))),0,"e")
end 
	AND MEDS_FLAG IN ('ALPHA_GLUC_INHIB_FLAG',
		                'MEGLITANIDE_NATEGLINIDE_FLAG',
			              'MEGLITANIDE_REPAGLINIDE_FLAG',
			              'METFORMIN_REPAGLINIDE_FLAG')
	
    /* 8. other */
 ;
 quit;

proc sql;
drop table t1;
create table t1 as
select distinct PATID, 'no_med_flag' AS MEDS_FLAG
FROM dmlocal.T1712_SELECTED_CASES WHERE PATID NOT IN (SELECT patid FROM dmtable.RCR_DEMO_MEDS_GROUPING_12 ); 
quit;

data dmtable.RCR_DEMO_MEDS_GROUPING_12;
set t1 dmtable.RCR_DEMO_MEDS_GROUPING_12;
run;

/*
MEDS_GROUPING at 12 mon revison 1
*/
/*
update the 12-month-drug-flag into different columns
*/
proc sql;
CREATE TABLE dmtable.RCR_DEMO_MEDS_GROUPING_12_REV AS
SELECT PATID
	, MAX(ANYINSULIN) as ANYINSULIN
	, MAX(DPP4) as DPP4
	, MAX(GLP1) as GLP1
	, MAX(TZD) as TZD
	, MAX(METFORMIN) as METFORMIN
	, MAX(NO_MED_FLAG) as NO_MED_FLAG
	, MAX(OTHER) as OTHER
	, MAX(SULGEN2) as SULGEN2
	, MAX(SGLT2) as SGLT2
	, MAX(METGLIPI) as METGLIPI 
	, MAX(METGLYBUR) as METGLYBUR 

FROM
(select PATID
, CASE WHEN MEDS_FLAG_12 = 'anyinsulin' THEN 1 ELSE 0 END AS ANYINSULIN
, CASE WHEN MEDS_FLAG_12 = 'DPP4' THEN 1 ELSE 0 END AS DPP4
, CASE WHEN MEDS_FLAG_12 = 'GLP1' THEN 1 ELSE 0 END AS GLP1
, CASE WHEN MEDS_FLAG_12 = 'TZD' THEN 1 ELSE 0 END AS TZD
, CASE WHEN MEDS_FLAG_12 = 'metformin' THEN 1 ELSE 0 END AS metformin
, CASE WHEN MEDS_FLAG_12 = 'no_med_flag' THEN 1 ELSE 0 END AS no_med_flag
, CASE WHEN MEDS_FLAG_12 = 'other' THEN 1 ELSE 0 END AS other
, CASE WHEN MEDS_FLAG_12 = 'sulgen2' THEN 1 ELSE 0 END AS sulgen2
, CASE WHEN MEDS_FLAG_12 = 'SGLT2' THEN 1 ELSE 0 END AS SGLT2
, CASE WHEN MEDS_FLAG_12 = 'metglybur' THEN 1 ELSE 0 END AS METGLYBUR 
, CASE WHEN MEDS_FLAG_12 = 'metglipi' THEN 1 ELSE 0 END AS METGLIPI 

from dmtable.RCR_DEMO_MEDS_GROUPING_12) U
GROUP BY 1
;
quit;

/*
MEDS_GROUPING at 12 mon revison 2
*/
/*
put all the 12-month-drg into differnt columns
*/
proc sql;
CREATE TABLE dmtable.RCR_DEMO_MEDS_GROUPING_12_REV2 AS
select PATID
,CASE WHEN (METFORMIN = 1) THEN 1 ELSE 0 END AS  METFORMIN_FLAG
,CASE WHEN (ANYINSULIN = 1) THEN 1 ELSE 0 END AS  ANYINSULIN_FLAG
,CASE WHEN (SULGEN2 = 1)THEN 1 ELSE 0 END AS  SULGEN2_FLAG
,CASE WHEN (TZD = 1) THEN 1 ELSE 0 END AS  TZD_FLAG
,CASE WHEN (DPP4 = 1) THEN 1 ELSE 0 END AS  DPP4_FLAG
,CASE WHEN (GLP1 = 1) THEN 1 ELSE 0 END AS  GLP1_FLAG
,CASE WHEN (SGLT2 = 1)  THEN 1 ELSE 0 END AS  SGLT2_FLAG

,CASE WHEN (METFORMIN+SULGEN2 = 2) OR (METGLYBUR = 1) OR (METGLIPI = 1)  THEN 1 ELSE 0 END AS  METFORMIN_SULGEN2_FLAG 
,CASE WHEN (METFORMIN+DPP4 = 2)  THEN 1 ELSE 0 END AS  METFORMIN_DPP4_FLAG
,CASE WHEN (METFORMIN+ANYINSULIN = 2) THEN 1 ELSE 0 END AS  METFORMIN_ANYINSULIN_FLAG
,CASE WHEN (METFORMIN+ANYINSULIN+DPP4+GLP1+TZD+OTHER+SULGEN2+SGLT2=1)  THEN 1 ELSE 0 END 
		AS  MULT_MED_COMBO_FLAG
		
,CASE WHEN (METFORMIN+ANYINSULIN+DPP4+GLP1+TZD+OTHER+SULGEN2+SGLT2=1)  THEN 1 ELSE 0 END 
		AS  OTHER_COMBO_FLAG
,CASE WHEN (GLP1 + METFORMIN= 2) THEN 1 ELSE 0 END AS GLP1_METFORMIN_FLAG
,CASE WHEN (SULGEN2 + GLP1 =2) THEN 1 ELSE 0 END AS SULGEN2_GLP1_FLAG
,CASE WHEN (SULGEN2 + ANYINSULIN =2) THEN 1 ELSE 0 END AS SULGEN2_ANYINSULIN_FLAG
,OTHER AS OTHER_FLAG
,NO_MED_FLAG
FROM dmtable.RCR_DEMO_MEDS_GROUPING_12_REV;
quit;

/*
MEDS_GROUPING at 12 mon revison 3
FINAL VERSION 12 mon drugs
*/
proc sql;
CREATE TABLE dmtable.RCR_DEMO_MEDS_GROUPING_12_REV3 AS

SELECT PATID, 'METFORMIN_FLAG' AS MEDS_FLAG FROM dmtable.RCR_DEMO_MEDS_GROUPING_12_REV2 WHERE METFORMIN_FLAG=1
    UNION
SELECT PATID, 'ANYINSULIN_FLAG' AS MEDS_FLAG FROM dmtable.RCR_DEMO_MEDS_GROUPING_12_REV2 WHERE ANYINSULIN_FLAG=1
    UNION
SELECT PATID, 'SULGEN2_FLAG' AS MEDS_FLAG FROM dmtable.RCR_DEMO_MEDS_GROUPING_12_REV2 WHERE SULGEN2_FLAG=1
    UNION
SELECT PATID, 'TZD_FLAG' AS MEDS_FLAG FROM dmtable.RCR_DEMO_MEDS_GROUPING_12_REV2 WHERE TZD_FLAG=1
    UNION
SELECT PATID, 'DPP4_FLAG' AS MEDS_FLAG FROM dmtable.RCR_DEMO_MEDS_GROUPING_12_REV2 WHERE DPP4_FLAG=1
    UNION
SELECT PATID, 'GLP1_FLAG' AS MEDS_FLAG FROM dmtable.RCR_DEMO_MEDS_GROUPING_12_REV2 WHERE GLP1_FLAG=1
    UNION
SELECT PATID, 'SGLT2_FLAG' AS MEDS_FLAG FROM dmtable.RCR_DEMO_MEDS_GROUPING_12_REV2 WHERE SGLT2_FLAG=1
    UNION
SELECT PATID, 'METFORMIN_SULGEN2_FLAG' AS MEDS_FLAG FROM dmtable.RCR_DEMO_MEDS_GROUPING_12_REV2 WHERE METFORMIN_SULGEN2_FLAG=1
    UNION
SELECT PATID, 'METFORMIN_DPP4_FLAG' AS MEDS_FLAG FROM dmtable.RCR_DEMO_MEDS_GROUPING_12_REV2 WHERE METFORMIN_DPP4_FLAG=1
    UNION
SELECT PATID, 'METFORMIN_ANYINSULIN_FLAG' AS MEDS_FLAG FROM dmtable.RCR_DEMO_MEDS_GROUPING_12_REV2 WHERE METFORMIN_ANYINSULIN_FLAG=1
    UNION
SELECT PATID, 'MULT_MED_COMBO_FLAG' AS MEDS_FLAG FROM dmtable.RCR_DEMO_MEDS_GROUPING_12_REV2 WHERE MULT_MED_COMBO_FLAG=1
    UNION
SELECT PATID, 'GLP1_METFORMIN_FLAG' AS MEDS_FLAG FROM dmtable.RCR_DEMO_MEDS_GROUPING_12_REV2 WHERE GLP1_METFORMIN_FLAG=1
    UNION
SELECT PATID, 'SULGEN2_GLP1_FLAG' AS MEDS_FLAG FROM dmtable.RCR_DEMO_MEDS_GROUPING_12_REV2 WHERE SULGEN2_GLP1_FLAG=1
    UNION
SELECT PATID, 'SULGEN2_ANYINSULIN_FLAG' AS MEDS_FLAG FROM dmtable.RCR_DEMO_MEDS_GROUPING_12_REV2 WHERE SULGEN2_ANYINSULIN_FLAG=1
    UNION
SELECT PATID, 'OTHER_COMBO_FLAG' AS MEDS_FLAG FROM dmtable.RCR_DEMO_MEDS_GROUPING_12_REV2 WHERE OTHER_COMBO_FLAG=1
	UNION
SELECT PATID, 'OTHER_FLAG' AS MEDS_FLAG FROM dmtable.RCR_DEMO_MEDS_GROUPING_12_REV2 WHERE OTHER_FLAG=1
    UNION
SELECT PATID, 'NO_MED_FLAG' AS MEDS_FLAG FROM dmtable.RCR_DEMO_MEDS_GROUPING_12_REV2 WHERE NO_MED_FLAG=1
;
quit;

proc sql;
CREATE TABLE dmtable.RCR_DEMO_MEDS_GROUPING AS

SELECT MG.*, 1 AS REMAIN_ON_DRUG 
FROM dmtable.RCR_DEMO_MEDS_GROUPING_U_REV3 MG 
	JOIN dmtable.RCR_DEMO_MEDS_GROUPING_12_REV3 MG12 
		ON MG.PATID= MG12.PATID AND MG.MEDS_FLAG = MG12.MEDS_FLAG
;
quit;

proc sql;
drop table t1;
create table t1 as
SELECT *, 0 AS REMAIN_ON_DRUG 
FROM dmtable.RCR_DEMO_MEDS_GROUPING_U_REV3 MG
WHERE PATID||MEDS_FLAG NOT IN (SELECT PATID||MEDS_FLAG AS PATID_MED FROM dmtable.RCR_DEMO_MEDS_GROUPING);
quit;

data dmtable.RCR_DEMO_MEDS_GROUPING;
set t1 dmtable.RCR_DEMO_MEDS_GROUPING;
run;

/*
MEDS_ON -730 days to -90
*/
proc sql;
CREATE TABLE dmtable.RCR_DEMO_MEDS_ON_730 AS
SELECT 
	DISTINCT 
	DEMO.PATID 
	,'metformin' AS MEDS_FLAG
FROM 
		dmlocal.T1712_SELECTED_CASES DEMO
			JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
		 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
					JOIN infolder.RCRT2D_MED_rxnorm MED ON   MED.RXNORM_CUI = RX.RXNORM_CUI
WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
    AND coalesce(RX_ORDER_DATE,RX_START_DATE ) BETWEEN (T1-730) AND (T1-90)
	AND 
	/* 1. metformin */
	MEDS_FLAG IN ('METFORMIN_FLAG',
	              'METFORMIN_DPP4_ALOGLIPTIN_FLAG',  /* Updated July 2020 */
	              'METFORMIN_DPP4_LINAGLIPTIN_FLAG', /* Updated July 2020 */
	              'METFORMIN_DPP4_SAXAGLIPTIN_FLAG', /* Updated July 2020 */
	              'METFORMIN_DPP4_SITAGLIPTIN_FLAG', /* Updated July 2020 */
	              'METFORMIN_ERTUGLIFLOZIN_FLAG',    /* Updated July 2020 */
	              'METFORMIN_ERTUGLIFOZIN_FLAG',     /* Updated July 2020 */
	              'METFORMIN_FIRST_GEN_SUL_FLAG',    /* Updated July 2020 */
	              'METFORMIN_GLIPIZIDE_FLAG',        /* Updated July 2020 */
	              'METFORMIN_GLYBURIDE_FLAG',        /* Updated July 2020 */   
	              'METFORMIN_MEGL_REPA_FLAG', /* Updated July 2020 */
	              'METFORMIN_SGLT2_CANA_FLAG', /* Updated July 2020 */
	              'METFORMIN_SGLT2_DAPA_FLAG', /* Updated July 2020 */
	              'METFORMIN_SGLT2_EMPA_FLAG', /* Updated July 2020 */
	              'METFORMIN_TZD_PIOGLITAZONE_FLAG',  /* Updated July 2020 */
	              'METFORMIN_TZD_ROSIGLITAZONE_FLAG') /* Updated July 2020 */
							
UNION
	
SELECT 
	DISTINCT 
	DEMO.PATID 
	,'anyinsulin' AS MEDS_FLAG
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
			JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
				JOIN infolder.RCRT2D_MED_rxnorm MED ON   MED.RXNORM_CUI = RX.RXNORM_CUI

WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
	AND coalesce(RX_ORDER_DATE,RX_START_DATE )  BETWEEN (T1-730) AND (T1-90)
	AND MEDS_FLAG IN ('ALL_INSULIN_FLAG',
	                  'INSULIN_GLP1_LIRAGLUTIDE_FLAG',  /* Updated July 2020 */
	                  'INSULIN_GLP1_LIXISENATIDE_FLAG')  /* Updated July 2020 */
	/* 2. anyinsulin */
	
UNION 
	
SELECT 
	DISTINCT 
	DEMO.PATID 
	,'sulgen2' AS MEDS_FLAG
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
	 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
				JOIN infolder.RCRT2D_MED_rxnorm MED ON   MED.RXNORM_CUI = RX.RXNORM_CUI
WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
	AND coalesce(RX_ORDER_DATE,RX_START_DATE )  BETWEEN (T1-730) AND (T1-90)
	AND MEDS_FLAG IN ('GLIPIZIDE_FLAG',
					          'GLYBURIDE_FLAG',
					          'GLIMEPERIDE_FLAG',
					          'FIRST_GEN_SUL_FLAG',  /* Updated July 2020 */
					          'GLIM_TZD_PIOG_FLAG',  /* Updated July 2020 */
					          'GLIM_TZD_ROSI_FLAG',  /* Updated July 2020 */
					          'METFORMIN_FIRST_GEN_SUL_FLAG',  /* Updated July 2020 */
					          'METFORMIN_GLIPIZIDE_FLAG',  /* Updated July 2020 */
					          'METFORMIN_GLYBURIDE_FLAG')  /* Updated July 2020 */
	/* 3. sulgen2 */

UNION 
	
SELECT 
	DISTINCT 
	DEMO.PATID 
	,'DPP4' AS MEDS_FLAG
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
		 	JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
				JOIN infolder.RCRT2D_MED_rxnorm MED ON   MED.RXNORM_CUI = RX.RXNORM_CUI
WHERE (ENC.ENC_TYPE IN NOT ('IP','ED','EI'))
	AND coalesce(RX_ORDER_DATE,RX_START_DATE )  BETWEEN (T1-730) AND (T1-90)
	AND MEDS_FLAG IN	('DPP4_LINAGLIPTIN_FLAG',
                     'DPP4_ALOGLITPIN_FLAG', 
                     'METFORMIN_DPP4_ALOGLIPTIN_FLAG',
                     'METFORMIN_DPP4_LINAGLIPTIN_FLAG',
        				     'METFORMIN_DPP4_SAXAGLIPTIN_FLAG',
                     'METFORMIN_DPP4_SITAGLIPTIN_FLAG',
                     'TZD_PIOG_DPP4_ALOG_FLAG', /*updated July 2020 */
                     'DPP4_LINA_SGLT2_EMPA_FLAG', /*updated July 2020 */
                     'DPP4_SAXAGLIPTIN_FLAG',
                     'DPP4_SITAGLIPTIN_FLAG',
                     'SAXAGLIPTIN_DAPAGLIFLOZIN_FLAG',  /* Updated July 2020 */
                     'SITAGLIPTIN_ERTUGLIFLOZIN_FLAG')   /* Updated July 2020 */
 
	/* 5. DPP4 */
						
UNION 

SELECT 
	DISTINCT 
	DEMO.PATID 
	,'GLP1' AS MEDS_FLAG
FROM 
	dmlocal.T1712_SELECTED_CASES DEMO
		JOIN indata.PRESCRIBING RX on demo.patid=rx.patid
	 		JOIN indata.ENCOUNTER ENC ON RX.ENCOUNTERID = ENC.ENCOUNTERID
				JOIN infolder.RCRT2D_MED_rxnorm MED ON  MED.RXNORM_CUI = RX.RXNORM_CUI
WHERE ENC.ENC_TYPE IN NOT ('IP','ED','EI')
	AND coalesce(RX_ORDER_DATE,RX_START_DATE )  BETWEEN (T1-730) AND (T1-90)
	AND MEDS_FLAG IN ('GLP1_EXENATIDE_FLAG',   /* Updated July 2020 */
	                  'GLP1_DULAGLUTIDE_FLAG',  /* Updated July 2020 */
	                  'GLP1_LIXISENATIDE_FLAG',  
	                  'INSULIN_GLP1_LIRAGLUTIDE_FLAG',  /* Updated July 2020 */
	                  'INSULIN_GLP1_LIXISENATIDE_FLAG',  /* Updated July 2020 */
	                  'GLP1_LIRAGLUTIDE_FLAG') 
	/* 6. GLP1 */
;
quit;

proc sql;
CREATE TABLE dmtable.RCR_DEMO_MEDS_ON_730_REV AS
SELECT PATID
	,MAX(METFORMIN_730) AS METFORMIN_730
	,MAX(SULGEN2_730) AS SULGEN2_730
	,MAX(DPP4_730) AS DPP4_730
	,MAX(GLP1_730) AS GLP1_730
	,MAX(ANYINSULIN_730) AS ANYINSULIN_730
FROM
(SELECT PATID
, CASE WHEN MEDS_FLAG = 'metformin' THEN 1 ELSE 0 END AS metformin_730
, CASE WHEN MEDS_FLAG = 'sulgen2' THEN 1  ELSE 0 END AS sulgen2_730
, CASE WHEN MEDS_FLAG = 'DPP4' THEN 1  ELSE 0 END AS DPP4_730
, CASE WHEN MEDS_FLAG = 'GLP1' THEN 1  ELSE 0 END AS GLP1_730
, CASE WHEN MEDS_FLAG = 'anyinsulin' THEN 1  ELSE 0 END AS anyinsulin_730
FROM dmtable.RCR_DEMO_MEDS_ON_730) X
GROUP BY PATID;
quit;

/* 
CREATE DEMO DRUG FLAG REMIND ON
*/
proc sql;
CREATE TABLE dmtable.RCR_T2D_FINAL_DEMO_MED_GRP AS
 SELECT 
 DISTINCT DEMO.PATID
 , round(yrdif(BIRTH_DATE,T1,'AGE')) as AGE_
 , year(T1)AS COHORT_ENTRY_YEAR
 , D.RACE
 , D.HISPANIC
 , MED.MEDS_FLAG
 , REMAIN_ON_DRUG
 , METFORMIN_730
 , SULGEN2_730
 , DPP4_730
 , GLP1_730
 , ANYINSULIN_730
 FROM
 dmlocal.T1712_SELECTED_CASES DEMO JOIN indata.DEMOGRAPHIC D on demo.patid=d.patid
 LEFT JOIN dmtable.RCR_DEMO_MEDS_GROUPING MED ON MED.PATID = DEMO.PATID
 LEFT JOIN dmtable.RCR_DEMO_MEDS_ON_730_REV MED730 ON MED730.PATID = DEMO.PATID
;
quit;

 /* 
 update the not in the list patients
*/
proc sql;
 UPDATE dmtable.RCR_T2D_FINAL_DEMO_MED_GRP
 SET METFORMIN_730=0, SULGEN2_730=0, DPP4_730=0, GLP1_730=0, ANYINSULIN_730=0
 WHERE METFORMIN_730 IS NULL;
quit;

/*
CREATE HEALTHCARE UTILIZATION
*/
proc sql;
CREATE TABLE dmtable.RCR_T2D_HEALTHCARE_UTILIZATION AS
SELECT d.PATID
, SUM(CASE WHEN ENC_TYPE in ('EI','IP')  THEN 1 ELSE 0 END) as HOSPITALIZATION
, SUM(CASE WHEN ENC_TYPE = 'AV' THEN 1 ELSE 0 END) as OUTPATIENTS
, SUM(CASE WHEN ENC_TYPE = 'ED' THEN 1 ELSE 0 END) as EMERGENCIES
FROM
(SELECT DISTINCT PATID
FROM dmlocal.T1712_SELECTED_CASES DEMO) D
LEFT JOIN
(SELECT DISTINCT DEMO.PATID, ENC.ADMIT_DATE, ENC.ENC_TYPE
FROM dmlocal.T1712_SELECTED_CASES DEMO,
	indata.ENCOUNTER ENC
WHERE DEMO.PATID = ENC.PATID 
AND ENC.ENC_TYPE IN ('IP', 'EI', 'ED', 'AV') 
AND ( ENC.ADMIT_DATE BETWEEN (T1-365) AND (T1-1))

) AD on d.patid=ad.patid
GROUP BY 1
;
quit;

/*
CREATE PHYSIOLOGIC NUMS
*/
proc sql;
CREATE TABLE dmtable.RCR_T2D_PHYSIOLOGIC AS																																						
SELECT DEMO.PATID,HEIGHT,WEIGHT,A1C,LDL,Creatinine,EGFR_CALCULATED,DIASTOLIC_BP, SYSTOLIC_BP, CASE WHEN HEIGHT is NOT NULL AND WEIGHT is NOT NULL THEN ROUND(WEIGHT/HEIGHT/HEIGHT*703)	ELSE . END AS BMI FROM 
	(SELECT DISTINCT PATID FROM dmlocal.T1712_SELECTED_CASES) DEMO
	 LEFT JOIN (SELECT PATID, HEIGHT FROM dmtable.VITAL_HT) HT on demo.patid=ht.patid
	  LEFT JOIN (SELECT PATID, MEDIAN(WEIGHT) as WEIGHT, MEDIAN(DIASTOLIC_BP) as DIASTOLIC_BP, MEDIAN(SYSTOLIC_BP) as SYSTOLIC_BP FROM dmtable.VITAL_WT_BP GROUP BY PATID) BP on demo.patid=bp.patid
		LEFT JOIN (SELECT PATID, MAX(LAB_VALUE) AS A1C  FROM dmtable.RCR_T2D_A1C GROUP BY PATID) A1C on demo.patid=a1c.patid
		LEFT JOIN (SELECT PATID, MAX(LAB_VALUE) AS LDL FROM dmtable.RCR_T2D_LDL GROUP BY PATID) LDL on demo.patid=ldl.patid
		LEFT JOIN (SELECT PATID, MAX(LAB_VALUE) AS Creatinine, MAX(EGFR_CALCULATED) AS  EGFR_CALCULATED FROM dmtable.RCR_T2D_CREATININE_EGFR GROUP BY PATID) EGFR on demo.patid=egfr.patid
	;
quit;

/*
CREATE THE FINAL TAB
*/
proc sql;
CREATE TABLE dmtable.RCR_T2D_FINAL_TAB AS
SELECT MEDS.PATID,MEDS_FLAG,REMAIN_ON_DRUG,METFORMIN_730,SULGEN2_730,DPP4_730,GLP1_730,
ANYINSULIN_730,AGE_,SEX, RACE,HISPANIC,STUDY_ENTRY_YEAR,NUM_INPATIENT_VISITS,NUM_ED_VISITS,
NUM_OUTPATIENT_VISITS,HYPERTENSION,HYPERLIPIDEMIA,CANCER,LIVER_DISEASE,PULMONARY,HEART_FAILURE,
RETINOPATHY,STROKE, CAROTID_DISEASE,OBSTRUCT_CORONARY_DISEASE,PERIPHERAL_ARTERY_DISEASE,CARDIAC_VALVE_DISEASE,CARDIAC_ARRHYTHMIA,SMOKING_COPD,SERIOUS_MENTAL_ILLNESS,
DEPRESSION,PARKINSONS,HEIGHT,WEIGHT,A1C,LDL,Creatinine,EGFR_CALCULATED,DIASTOLIC_BP,SYSTOLIC_BP,BMI,ACE_ARB,
Antiarrhy_Digoxin,Antico_Platelet,Antipsychotics,Aspirin,BETA_BLOCKER,Bone_Resorption,
CALCUIM_CHANNEL,LIPID_LOWERING,Loop_Diuretics,Nitrates,Non_Sel_Alpha,ORAL_GLUCOCORT,
Antihypertensives,PERIPH_VASO,THIAZIDE_DIURETICS FROM 

(SELECT PATID, MEDS_FLAG, REMAIN_ON_DRUG, METFORMIN_730, SULGEN2_730, DPP4_730, GLP1_730, ANYINSULIN_730  FROM dmtable.RCR_T2D_FINAL_DEMO_MED_GRP) MEDS
LEFT JOIN
(SELECT PATID
, AGE as AGE_, SEX, RACE, HISPANIC, STUDY_ENTRY_YEAR
, NUM_INPATIENT_VISITS, NUM_ED_VISITS, NUM_OUTPATIENT_VISITS
/*
Co-Morbidities Categories
*/
, HTN_FLAG AS HYPERTENSION 
, LIPID_DISORDERS_FLAG AS HYPERLIPIDEMIA 
, CANCER_FLAG AS CANCER
, LIVER_DISEASE_FLAG AS LIVER_DISEASE
, PULMONARY_FLAG AS PULMONARY
, CHF_FLAG AS HEART_FAILURE
, RETINOPATHY_FLAG AS RETINOPATHY
, MAX(STROKE_FLAG, TIA_FLAG) AS STROKE
, CAROTID_DISEASE_FLAG AS CAROTID_DISEASE
, OBSTRUCT_CORONARY_FLAG AS OBSTRUCT_CORONARY_DISEASE
, PERIPHERAL_ARTERY_FLAG AS PERIPHERAL_ARTERY_DISEASE
, CARDIAC_VALVE_DISEASE_FLAG as CARDIAC_VALVE_DISEASE
, MAX(ARRYTHMIA_CONDUCTION_DISORDER, AFIB_FLAG) AS CARDIAC_ARRHYTHMIA
, MAX(COPD_EMPHYSEMA_ASTHMA_FLAG, OXYGEN_THERAPY_FLAG) as SMOKING_COPD
, MAX(DEMENTIA_FLAG, SCHIZOPHRENIA_FLAG, BIPOLAR_PSYCHO_DISPORDER_FLAG, PTSD_FLAG) AS SERIOUS_MENTAL_ILLNESS
, DEPRESSION_FLAG AS DEPRESSION
, PARKINSONS_FLAG AS PARKINSONS

FROM dmtable.RCR_T2D_DEMO_FLAG) CM 
		on meds.patid=cm.patid
LEFT JOIN dmtable.RCR_T2D_PHYSIOLOGIC PH on meds.patid=ph.patid

LEFT JOIN 
			(SELECT 
			DISTINCT PATID
			, ACE_ARB_FLAG AS ACE_ARB
			, MAX(ANTI_ARRHYTH_FLAG, DIGOXIN_FLAG) AS  Antiarrhy_Digoxin
			, MAX(ANTICOAG_FLAG, PLATET_INHIB_N_ASP_FLAG) AS Antico_Platelet
			, ANTIPSYC_MEDS_FLAG AS Antipsychotics 
			, ASPIRIN_FLAG AS Aspirin 
			, BETA_BLOCKER_FLAG AS BETA_BLOCKER
			, BONE_RESORP_INHIB_FLAG AS Bone_Resorption
			, CALCIUM_CHAN_BLOCK_FLAG AS CALCUIM_CHANNEL
			, MAX(LIPID_LOW_NON_STAT_FLAG,LIPID_LOW_STATINS_FLAG) AS LIPID_LOWERING
			, LOOP_DIURETICS_FLAG AS Loop_Diuretics
			, NITRATES_FLAG AS Nitrates 
			, NON_SEL_ALPHA_BL_FLAG AS Non_Sel_Alpha
			, ORAL_GLUCOCORT_FLAG AS ORAL_GLUCOCORT
			, OTHER_ANTIHYPER_FLAG AS Antihypertensives 
			, PERIPH_VASO_FLAG AS  PERIPH_VASO
			, THIAZIDE_DIURETICS_FLAG AS THIAZIDE_DIURETICS
			FROM 
			dmtable.RCR_T2D_CHAR_MED_FLAG)


			MF on meds.patid=mf.patid
;
quit;

proc sql;
CREATE table dmtable.V_RCR_T2D_FINAL_TAB AS
SELECT 
MEDS_FLAG
, PATID 
, REMAIN_ON_DRUG
, METFORMIN_730
, SULGEN2_730
, DPP4_730
, GLP1_730
, ANYINSULIN_730
, AGE_
, CASE WHEN SEX= 'M' THEN 1 ELSE 0 END as Male
, CASE WHEN SEX= 'F' THEN 1 ELSE 0 END as Female
, CASE WHEN SEX IN ('A', 'OT') THEN 1 ELSE 0 END as SEX_OTHER
, CASE WHEN SEX IN ('NI', 'UN') THEN 1 ELSE 0 END as SEX_MISSING
, CASE WHEN RACE= '05' THEN 1 ELSE 0 END as WHITE
, CASE WHEN RACE= '03' THEN 1 ELSE 0 END as BLACK
, CASE WHEN RACE IN ('01', '02', '04', '06', 'OT') THEN 1 ELSE 0 END as OTHER
, CASE WHEN RACE IN ('07', 'NI', 'UN') THEN 1 ELSE 0 END as UNKNOWN
, CASE WHEN HISPANIC ='Y' THEN 1 ELSE 0 END as HISPANIC_LATINO

, CASE WHEN STUDY_ENTRY_YEAR IN (2011, 2012) THEN 1 ELSE 0 END as COHORT_ENTRY_2012
, CASE WHEN STUDY_ENTRY_YEAR =2013 THEN 1 ELSE 0 END as  COHORT_ENTRY_2013
, CASE WHEN STUDY_ENTRY_YEAR =2014 THEN 1 ELSE 0 END as  COHORT_ENTRY_2014
, CASE WHEN STUDY_ENTRY_YEAR =2015 THEN 1 ELSE 0 END as  COHORT_ENTRY_2015
, CASE WHEN STUDY_ENTRY_YEAR =2016 THEN 1 ELSE 0 END as  COHORT_ENTRY_2016
, CASE WHEN STUDY_ENTRY_YEAR =2017 THEN 1 ELSE 0 END as  COHORT_ENTRY_2017 
, CASE WHEN STUDY_ENTRY_YEAR =2018 THEN 1 ELSE 0 END as  COHORT_ENTRY_2018  /*updated July 2020*/
, CASE WHEN STUDY_ENTRY_YEAR =2019 THEN 1 ELSE 0 END as  COHORT_ENTRY_2019  /*updated July 2020*/
, CASE WHEN NUM_INPATIENT_VISITS > 0 THEN 1 ELSE 0 END as HOSPITALIZATION 
, NUM_ED_VISITS
, NUM_OUTPATIENT_VISITS
, SYSTOLIC_BP
, DIASTOLIC_BP
, CASE WHEN SYSTOLIC_BP is NOT NULL AND DIASTOLIC_BP is NOT NULL THEN 1 ELSE 0 END as  BP_N
, CASE WHEN BMI is NOT NULL THEN 1 ELSE 0 END as BMI_N
, BMI
, CASE WHEN A1C is NOT NULL THEN 1 ELSE 0 END as A1C_N
, A1C
, CASE WHEN LDL is NOT NULL THEN 1 ELSE 0 END as LDL_N
, LDL 
, CASE WHEN CREATININE is NOT NULL THEN 1 ELSE 0 END as CREATININE_N
, CREATININE
, EGFR_CALCULATED

/* medication flags */
,ACE_ARB
,ANTIARRHY_DIGOXIN
,ANTICO_PLATELET
,ANTIPSYCHOTICS
,ASPIRIN
,BETA_BLOCKER
,BONE_RESORPTION
,CALCUIM_CHANNEL
,LIPID_LOWERING
,LOOP_DIURETICS
,NITRATES
,NON_SEL_ALPHA
,ORAL_GLUCOCORT
,ANTIHYPERTENSIVES
,PERIPH_VASO
,THIAZIDE_DIURETICS
/* need to map and feedback from PI */
, HYPERTENSION
, HYPERLIPIDEMIA
, CANCER
, LIVER_DISEASE
, PULMONARY
, HEART_FAILURE
, RETINOPATHY
, STROKE
, CAROTID_DISEASE
, OBSTRUCT_CORONARY_DISEASE
, PERIPHERAL_ARTERY_DISEASE
, CARDIAC_VALVE_DISEASE
, CARDIAC_ARRHYTHMIA
, SMOKING_COPD
, SERIOUS_MENTAL_ILLNESS AS SERIOUS_MENTAL
, DEPRESSION
, PARKINSONS
from dmtable.RCR_T2D_FINAL_TAB
;
quit;

data dmtable.V_RCR_T2D_FINAL_TAB;
length nid $20;
set dmtable.V_RCR_T2D_FINAL_TAB;
	nid=compress(cats(patid,"0"), , "KD");
    new_id = input(nid, best32.);
   drop patid nid;
   rename new_id=patid;
run;

proc sql;
CREATE table dmtable.FINAL_TAB as
	 SELECT 
		MEDS_FLAG FORMAT=$Char16.
		,PATID 
		,REMAIN_ON_DRUG 
		,METFORMIN_730 
		,SULGEN2_730 
		,DPP4_730 
		,GLP1_730 
		,ANYINSULIN_730 
		,AGE_ 
		,MALE
        ,FEMALE
        ,SEX_OTHER
		,SEX_MISSING
		,WHITE 
		,BLACK 
		,OTHER 
		,UNKNOWN 
		,HISPANIC_LATINO 
		,COHORT_ENTRY_2012 
		,COHORT_ENTRY_2013 
		,COHORT_ENTRY_2014 
		,COHORT_ENTRY_2015 
		,COHORT_ENTRY_2016 
		,COHORT_ENTRY_2017
		,COHORT_ENTRY_2018   /*updated July 2020*/
		,COHORT_ENTRY_2019   /*updated July 2020*/
		,HOSPITALIZATION 
		,NUM_ED_VISITS 
		,NUM_OUTPATIENT_VISITS 
		,BP_N 
		,SYSTOLIC_BP 
		,DIASTOLIC_BP 
		,BMI_N 
		,BMI 
		,A1C_N 
		,A1C 
		,LDL_N 
		,LDL 
		,CREATININE_N 
		,CREATININE 
		,EGFR_CALCULATED 
		,ACE_ARB 
		,ANTIARRHY_DIGOXIN 
		,ANTICO_PLATELET 
		,ANTIPSYCHOTICS 
		,ASPIRIN 
		,BETA_BLOCKER 
		,BONE_RESORPTION 
		,CALCUIM_CHANNEL 
		,LIPID_LOWERING 
		,LOOP_DIURETICS 
		,NITRATES 
		,NON_SEL_ALPHA 
		,ORAL_GLUCOCORT 
		,ANTIHYPERTENSIVES 
		,PERIPH_VASO 
		,THIAZIDE_DIURETICS 
		,HYPERTENSION 
		,HYPERLIPIDEMIA 
		,CANCER 
		,LIVER_DISEASE 
		,PULMONARY 
		,HEART_FAILURE 
		,RETINOPATHY 
		,STROKE 
		,CAROTID_DISEASE
        ,OBSTRUCT_CORONARY_DISEASE
        ,PERIPHERAL_ARTERY_DISEASE
		,CARDIAC_VALVE_DISEASE 
		,CARDIAC_ARRHYTHMIA 
		,SMOKING_COPD 
		,SERIOUS_MENTAL 
		,DEPRESSION 
		,PARKINSONS 

FROM 
 dmtable.V_RCR_T2D_FINAL_TAB;
quit;

proc datasets nolist nodetails lib=work kill memtype=data; quit;

PROC FORMAT;
  VALUE threshold
       .n="N/A"
	   .t="BT"
        0 < - &threshold="BT"
        other = [16.0];
RUN;

/* calculate median IQR */

ODS Listing CLOSE;

ods csv file="&qpath/dmoutput/&DMID._&PACKAGENAME._&VER._result.csv";

PROC TABULATE data=dmtable.FINAL_TAB Out=&DMID._result;
CLASS MEDS_FLAG;

VAR 
PATID
REMAIN_ON_DRUG
METFORMIN_730
SULGEN2_730
DPP4_730
GLP1_730
ANYINSULIN_730
AGE_
MALE
FEMALE
SEX_OTHER
SEX_MISSING
WHITE
BLACK
OTHER
UNKNOWN
HISPANIC_LATINO
COHORT_ENTRY_2012
COHORT_ENTRY_2013
COHORT_ENTRY_2014
COHORT_ENTRY_2015
COHORT_ENTRY_2016
COHORT_ENTRY_2017
COHORT_ENTRY_2018   /*updated July 2020*/
COHORT_ENTRY_2019   /*updated July 2020*/
HOSPITALIZATION
NUM_ED_VISITS
NUM_OUTPATIENT_VISITS
SYSTOLIC_BP
DIASTOLIC_BP
BP_N
BMI_N
BMI
A1C_N
A1C
LDL_N
LDL
CREATININE_N
CREATININE
EGFR_CALCULATED
ACE_ARB
ANTIARRHY_DIGOXIN
ANTICO_PLATELET
ANTIPSYCHOTICS
ASPIRIN
BETA_BLOCKER
BONE_RESORPTION
CALCUIM_CHANNEL
LIPID_LOWERING
LOOP_DIURETICS
NITRATES
NON_SEL_ALPHA
ORAL_GLUCOCORT
ANTIHYPERTENSIVES
PERIPH_VASO
THIAZIDE_DIURETICS
HYPERTENSION
HYPERLIPIDEMIA
CANCER
LIVER_DISEASE
PULMONARY
HEART_FAILURE
RETINOPATHY
STROKE
CAROTID_DISEASE
OBSTRUCT_CORONARY_DISEASE
PERIPHERAL_ARTERY_DISEASE
CARDIAC_VALVE_DISEASE
CARDIAC_ARRHYTHMIA
SMOKING_COPD
SERIOUS_MENTAL
DEPRESSION
PARKINSONS;
TABLE
		PATID ='N patients' * N=''  *f=threshold. 
		REMAIN_ON_DRUG= 'N patients remain on drug at 12 months' * SUM='' *f=threshold.
		METFORMIN_730= 'N patients remain on METFORMIN from -730 to -90' * SUM='' *f=threshold.
		SULGEN2_730= 'N patients remain on SULGEN2 from -730 to -90' * SUM='' *f=threshold.
		DPP4_730= 'N patients remain on DPP4 from -730 to -90' * SUM='' *f=threshold.
		GLP1_730= 'N patients remain on GLP1 from -730 to -90' * SUM='' *f=threshold.
		ANYINSULIN_730= 'N patients remain on ANYINSULIN from -730 to -90' * SUM='' *f=threshold.
		AGE_='Age at time of Qualifying Index Date' * (Median qrange='IQR')
		MALE='Male' * SUM='' *f=threshold.
        FEMALE='Female' * SUM='' *f=threshold.
        SEX_OTHER='Sex - Other' * SUM='' *f=threshold.
		SEX_MISSING='Sex - Missing' * SUM='' *f=threshold.
		WHITE='White' * SUM='' *f=threshold.
		BLACK='Black' * SUM='' *f=threshold.
		OTHER='Other' * SUM='' *f=threshold.
		UNKNOWN='Missing' * SUM='' *f=threshold.
		
		HISPANIC_LATINO='Hispanic/ Latino(Include Hispanic=Yes)' * SUM='' *f=threshold.
		COHORT_ENTRY_2012= 'Calendar year of cohort entry 2012' * SUM='' *f=threshold.
		COHORT_ENTRY_2013= 'Calendar year of cohort entry 2013' * SUM='' *f=threshold.
		COHORT_ENTRY_2014= 'Calendar year of cohort entry 2014' * SUM='' *f=threshold.
		COHORT_ENTRY_2015= 'Calendar year of cohort entry 2015' * SUM='' *f=threshold.
		COHORT_ENTRY_2016= 'Calendar year of cohort entry 2016' * SUM='' *f=threshold.
		COHORT_ENTRY_2017= 'Calendar year of cohort entry 2017' * SUM='' *f=threshold.
		COHORT_ENTRY_2018= 'Calendar year of cohort entry 2018' * SUM='' *f=threshold.   /*updated July 2020*/
		COHORT_ENTRY_2019= 'Calendar year of cohort entry 2019' * SUM='' *f=threshold.   /*updated July 2020*/
		
		HOSPITALIZATION='Hospitalization N' * SUM='' *f=threshold.
		NUM_ED_VISITS='Emergency Department visits'  * (Median qrange='IQR')
		NUM_OUTPATIENT_VISITS='Outpatient visits' * (Median qrange='IQR')
		
		SYSTOLIC_BP='Systolic Blood Pressure' * (Median qrange='IQR')
		DIASTOLIC_BP='Diastolic Blood Pressure' * (Median qrange='IQR')
		BP_N = 'N with Measure available' * SUM='' *f=threshold.
		BMI * (Median qrange='IQR')
		BMI_N= 'N with Measure available' * SUM='' *f=threshold.
		A1C= 'HBA1C' * (Median qrange='IQR')
		A1C_N= 'N with Measure available' * SUM='' *f=threshold.
		LDL = 'LDL Cholesterol' * (Median qrange='IQR')
		LDL_N= 'N with Measure available' * SUM='' *f=threshold.
		CREATININE='Serum Creatinine' * (Median qrange='IQR')
		EGFR_CALCULATED= 'eGFR' * (Median qrange='IQR')
		CREATININE_N='N with Measure available' * SUM='' *f=threshold.
		
		ACE_ARB='ACE / ARBs' * SUM='' *f=threshold.
		ANTIHYPERTENSIVES= 'Antihypertensives' * SUM='' *f=threshold.
		ANTIARRHY_DIGOXIN='Antiarrhythmics/ Digoxin and inotropes' * SUM='' *f=threshold.
		ANTICO_PLATELET='Anticoagulants and  Platelet inhibitors' * SUM='' *f=threshold.
		LIPID_LOWERING='Lipid lowering drugs' * SUM='' *f=threshold.
		NITRATES='Nitrates' * SUM='' *f=threshold.
		ASPIRIN='Aspirin' * SUM='' *f=threshold.
		LOOP_DIURETICS='Loop Diuretics' * SUM='' *f=threshold.
		ANTIPSYCHOTICS='Antipsychotics' * SUM='' *f=threshold.
		NON_SEL_ALPHA='Non Selective Alpha Blockers' * SUM='' *f=threshold.
		PERIPH_VASO='Peripheral Vasodilators' * SUM='' *f=threshold.
		ORAL_GLUCOCORT='Oral Glucocorticoids' * SUM='' *f=threshold.
		BONE_RESORPTION='Bone Resorption Inhibitors' * SUM='' *f=threshold.
		BETA_BLOCKER='Beta-Blockers' * SUM='' *f=threshold.
		CALCUIM_CHANNEL='Calcium Channel Blockers' * SUM='' *f=threshold.
		THIAZIDE_DIURETICS='Thiazide Diuretics' * SUM='' *f=threshold.
		
		
		HYPERTENSION='Hypertension' * SUM='' *f=threshold.
		HYPERLIPIDEMIA='Hyperlipidemia' * SUM='' *f=threshold.
		CANCER='Cancer' * SUM='' *f=threshold.
		LIVER_DISEASE='Liver disease' * SUM='' *f=threshold.
		PULMONARY='Pulmonary hypertension/ Embolism' * SUM='' *f=threshold.
		HEART_FAILURE='Heart failure' * SUM='' *f=threshold.
		RETINOPATHY='Retinopathy' * SUM='' *f=threshold.
		STROKE='Stoke/TIA' * SUM='' *f=threshold.
		CAROTID_DISEASE='Carotid disease' * SUM='' *f=threshold.
        OBSTRUCT_CORONARY_DISEASE='Obstructive coronary disease' * SUM='' *f=threshold.
        PERIPHERAL_ARTERY_DISEASE='Peripheral Artery disease' * SUM='' *f=threshold.
		CARDIAC_VALVE_DISEASE='Cardiac Valve Disease' * SUM='' *f=threshold.
		CARDIAC_ARRHYTHMIA='Cardiac Arrhythmia/ Atrial fibrillation' * SUM='' *f=threshold.
		SMOKING_COPD='Smoking-related illness / COPD/ Oxygen use' * SUM='' *f=threshold.
		SERIOUS_MENTAL='Serious Mental illness' * SUM='' *f=threshold.
		DEPRESSION='Depression'  * SUM='' *f=threshold.
		PARKINSONS="Parkinsons" * SUM='' *f=threshold.
		,
 		MEDS_FLAG=''
;

run;

ods csv close;


proc sql;
create table &DMID._mult_med_combo_cnt as
       select cnt format=threshold., substr(NYINSULIN||DPP4||GLP1||TZD||METFORMIN||OTHER||SULGEN2||SGLT2,1,length(NYINSULIN||DPP4||GLP1||TZD||METFORMIN||OTHER||SULGEN2||SGLT2)-2) as type
       from
       (      
              SELECT CNT
       ,CASE WHEN ANYINSULIN= 1  then 'ANYINSULIN + ' else '' end as NYINSULIN
       ,CASE WHEN DPP4= 1  then 'DPP4 + 'else '' end as DPP4
       ,CASE WHEN GLP1= 1  then 'GLP1 + 'else '' end as GLP1
       ,CASE WHEN TZD= 1  then 'TZD + 'else '' end as TZD
       ,CASE WHEN METFORMIN= 1  then 'METFORMIN + ' else '' end as METFORMIN
       ,CASE WHEN OTHER= 1  then 'OTHER + 'else '' end as OTHER
       ,CASE WHEN SULGEN2= 1  then 'SULGEN2 + ' else '' end as SULGEN2
       ,CASE WHEN SGLT2= 1  then 'SGLT2 + ' else '' end as SGLT2
       FROM 
              (SELECT 
               COUNT(*) as CNT, 
              ANYINSULIN
              ,DPP4
              ,GLP1
              ,TZD
              ,METFORMIN
              ,OTHER
              ,SULGEN2
              ,SGLT2

              FROM dmtable.RCR_DEMO_MEDS_GROUPING_U_REV 
              WHERE PATID IN 
              (SELECT  PATID FROM dmtable.RCR_DEMO_MEDS_GROUPING_U_REV3 WHERE MEDS_FLAG IN ('MULT_MED_COMBO_FLAG'))
              
              GROUP BY 2,3,4,5,6,7,8,9
              ) X)Y

;
quit;

data &DMID._mult_med_combo_cnt;
set &DMID._MULT_MED_COMBO_CNT;
type1=compress(type, ,'s');
drop type ;
rename type1=type;
run;

proc export data=&DMID._mult_med_combo_cnt dbms=csv

outfile="&qpath/dmoutput/&DMID._&PACKAGENAME._&VER._MULT_MED_COMBO_FLAG_COUNT.csv"

replace;

run;

proc sql;
create table &DMID._other_combo_cnt as
select cnt format=threshold., substr(NYINSULIN||DPP4||GLP1||TZD||METFORMIN||OTHER||SULGEN2||SGLT2,1,length(NYINSULIN||DPP4||GLP1||TZD||METFORMIN||OTHER||SULGEN2||SGLT2)-2) as type
       from
       (      
       SELECT CNT
       ,CASE WHEN ANYINSULIN= 1  then 'ANYINSULIN + ' else '' end as NYINSULIN
       ,CASE WHEN DPP4= 1  then 'DPP4 + 'else '' end as DPP4
       ,CASE WHEN GLP1= 1  then 'GLP1 + 'else '' end as GLP1
       ,CASE WHEN TZD= 1  then 'TZD + 'else '' end as TZD
       ,CASE WHEN METFORMIN= 1  then 'METFORMIN + ' else '' end as METFORMIN
       ,CASE WHEN OTHER= 1  then 'OTHER + 'else '' end as OTHER
       ,CASE WHEN SULGEN2= 1  then 'SULGEN2 + ' else '' end as SULGEN2
       ,CASE WHEN SGLT2= 1  then 'SGLT2 + ' else '' end as SGLT2
       FROM 
              (SELECT 
               COUNT(*) as CNT, 
              ANYINSULIN
              ,DPP4
              ,GLP1
              ,TZD
              ,METFORMIN
              ,OTHER
              ,SULGEN2
              ,SGLT2

              FROM dmtable.RCR_DEMO_MEDS_GROUPING_U_REV 
              WHERE PATID IN 
              (SELECT  PATID FROM dmtable.RCR_DEMO_MEDS_GROUPING_U_REV3 WHERE MEDS_FLAG IN ('OTHER_COMBO_FLAG'))
              
              GROUP BY 2,3,4,5,6,7,8,9
              ) X)Y

;
quit;

data &DMID._other_combo_cnt;
set &DMID._other_combo_cnt;
type1=compress(type, ,'s');
drop type ;
rename type1=type;
run;

proc export data=&DMID._other_combo_cnt dbms=csv

outfile="&qpath/dmoutput/&DMID._&PACKAGENAME._&VER._OTHER_COMBO_FLAG_COUNT.csv"

replace;

run;

ODS Listing CLOSE;

ods csv file="&qpath/dmoutput/&DMID._&PACKAGENAME._&VER._Count_break_out_all_cases.csv";

/* all cases */
proc sql;
create table &DMID._cnt_by_cases as
select count(*) format=threshold. as cnt, CASE_TYPE 
From

(select distinct PATID, CASE_TYPE from dmlocal.T1712_SELECTED_CASES) x
group by 2
;
quit;

proc tabulate data=&DMID._cnt_by_cases;
var cnt;
class case_type;
table  cnt*f=threshold. * case_type;
run;

/* all cases by race */
proc sql;
create table &DMID._cnt_by_cases_race as
SELECT COUNT(*) format=threshold. as cnt,  RACE, CASE_TYPE

FROM 
(select 
x.PATID, CASE_TYPE

, CASE 
	WHEN RACE = '05' THEN 'White'
	WHEN RACE = '03' THEN 'Black'
	WHEN  RACE IN ('01', '02', '04', '06', 'OT') THEN 'Other'
	WHEN RACE IN ('07', 'NI', 'UN')THEN 'Missing'
	END
	AS RACE

from 
	(select distinct PATID, CASE_TYPE from dmlocal.T1712_SELECTED_CASES) x
	join indata.demographic d on x.patid=d.patid) X
	
	GROUP BY 2, 3
	ORDER BY 2, 3
	;
quit;

proc tabulate data=&DMID._cnt_by_cases_race;
var cnt;
class race case_type;
table race, cnt*f=threshold. * case_type;
run;

/* all case by age_group */
proc sql;
create table t1 as
select 
x.PATID
, CASE_TYPE
, round(yrdif(birth_date,'31dec2017'd,'AGE')) as AGE_
, SEX 
from 
	(select distinct PATID, CASE_TYPE from dmlocal.T1712_SELECTED_CASES) x
	join indata.demographic d on x.patid=d.patid
;
quit;

proc sql;
create table t2 as
select 
PATID
, CASE_TYPE

,AGE_


, SEX 
, CASE 
	WHEN AGE_ BETWEEN 18 and 64 THEN 'Age 18-64'
	WHEN AGE_ >=65 THEN 'Age 65+' END AS AGE_GROUP
from t1;
quit;	
	

proc sql;
create table &DMID._cnt_by_cases_age as
SELECT COUNT(*) format=threshold. as cnt,  AGE_GROUP, CASE_TYPE

FROM 
t2
	
	GROUP BY 2, 3
	ORDER BY 2,3
	;
quit;

proc tabulate data=&DMID._cnt_by_cases_age;
var cnt;
class age_group case_type;
table age_group, cnt*f=threshold. * case_type;
run;
	
/* all case by sex */
proc sql;
drop table t1;
drop table t2;
create table &DMID._cnt_by_cases_sex as
SELECT COUNT(*) format=threshold. as cnt,  SEX, CASE_TYPE

FROM 
(select 
 x.PATID, CASE_TYPE
 , SEX 
from 
	(select distinct PATID, CASE_TYPE from dmlocal.T1712_SELECTED_CASES) x
	join indata.demographic d on x.patid=d.patid) X
	
	GROUP BY 2, 3
	ORDER BY 3, 2
	;
quit;

proc tabulate data=&DMID._cnt_by_cases_sex;
var cnt;
class sex case_type;
table sex, cnt*f=threshold. * case_type;
run;

ods csv close;

data dmlocal.RUNTIME;        
    set dmlocal.RUNTIME;
	end_time=datetime();
    processing_time=end_time-start_time;             
run;
proc export data=dmlocal.RUNTIME dbms=csv
outfile="&qpath/dmoutput/&DMID._RCR_T2D_run_time.csv"
replace;
run;

/* Create a SAS transport file from summary datasets */
filename tranfile "&qpath.dmoutput/rcr_t2d_summary.cpt";
proc cport library=work file=tranfile memtype=data; run;

proc printto;
run;


